<Window x:Class="BauphysikToolWPF.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:ui1="clr-namespace:BauphysikToolWPF.Services.UI"
    xmlns:controls="clr-namespace:BauphysikToolWPF.UI.CustomControls"
    xmlns:vm="clr-namespace:BauphysikToolWPF.UI.ViewModels"
    d:DataContext="{d:DesignInstance vm:MainWindow_VM}"
    mc:Ignorable="d"
    Title="{Binding Title}"
    Height="800"
    Width="1600"
    Background="{StaticResource PrimaryLightBrush}"
    WindowStartupLocation="CenterScreen"
    Closing="MainWindow_OnClosing"
    Loaded="MainWindow_OnLoaded"
    StateChanged="MainWindow_StateChanged"
    TextOptions.TextFormattingMode="Display"
    WindowStyle="None">

    <WindowChrome.WindowChrome>
        <WindowChrome CaptionHeight="32" ResizeBorderThickness="{x:Static SystemParameters.WindowResizeBorderThickness}" />
    </WindowChrome.WindowChrome>

    <!--
    Additionally added: d:DataContext="{d:DesignInstance vm:MainWindow_VM}"
    to the xaml constructor to be able to acces Named Elements in code behind
    -->
    <Window.DataContext>
        <vm:MainWindow_VM/>
    </Window.DataContext>

    <Window.Resources>
        
        <ui1:PageTemplateSelector x:Key="PageTemplateSelector" />


        <!--
        PARENT PAGES
        -->
        <Style x:Key="ParentPagesListBoxStyle" TargetType="{x:Type ListBox}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled"/>
            <Setter Property="Padding" Value="0,4,0,0"/>
            <Setter Property="BorderThickness" Value="0"/>
        </Style>

        <DataTemplate x:Key="ParentPageItemTemplate">
            <Button Content="{Binding PageName}"
                    ToolTip="{Binding Tooltip}"
                    IsEnabled="{Binding IsEnabled}"
                    Command="{Binding DataContext.SetPageButtonClickCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                    CommandParameter="{Binding Page}"
                    Style="{StaticResource ButtonStandard}"
                    Tag="{Binding Icon}"/>
        </DataTemplate>

        <Style x:Key="ParentPageItemStyle" TargetType="ListBoxItem">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <Border Name="listBoxItem_Border"
                                Background="{TemplateBinding Background}"
                                BorderThickness="4,0,0,0"   
                                BorderBrush="Transparent"
                                SnapsToDevicePixels="true"
                                Margin="0,0,0,16"
                                CornerRadius="8">
                            <ContentPresenter
                                HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                Margin="0"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <DataTrigger Binding="{Binding IsSelected}" Value="True">
                                <Setter TargetName="listBoxItem_Border"
                                        Property="BorderBrush"
                                        Value="{StaticResource PrimaryHighlightBrush}" />
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--
        CHILD PAGES
        -->
        <Style x:Key="ChildPagesListBoxStyle" TargetType="{x:Type ListBox}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="BorderThickness" Value="0"/>
        </Style>

        <DataTemplate x:Key="ChildPageItemTemplate">
            <Button Content="{Binding PageName}"
                    IsEnabled="{Binding IsEnabled}"
                    Command="{Binding DataContext.SetPageButtonClickCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                    CommandParameter="{Binding Page}"
                    ToolTip="{Binding Tooltip}"
                    Style="{StaticResource ButtonDark}"
                    Tag="{Binding Icon}"/>
        </DataTemplate>

        <Style x:Key="ChildPageItemStyle" TargetType="ListBoxItem">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <Border x:Name="listBoxItem_Border"
                                Background="{TemplateBinding Background}"
                                BorderThickness="4,0,0,0"
                                BorderBrush="Transparent"
                                SnapsToDevicePixels="true"
                                Margin="0,8,0,0"
                                CornerRadius="8">
                            <ContentPresenter
                                HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                Margin="0"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <DataTrigger Binding="{Binding IsSelected}" Value="True">
                                <Setter TargetName="listBoxItem_Border"
                                        Property="BorderBrush"
                                        Value="{StaticResource PrimaryMediumBrush}" />
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>



        <Style x:Key="WindowMainPanelStyle" TargetType="{x:Type Border}">
            <Setter Property="BorderBrush" Value="{DynamicResource WindowBorderBrush}" />
            <Setter Property="BorderThickness" Value="0" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=WindowState}" Value="Maximized">
                    <Setter Property="BorderThickness" Value="0" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="TitleBarButtonStyle" TargetType="Button">
            <Setter Property="Foreground" Value="{DynamicResource WindowTextBrush}" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
            <Setter Property="IsTabStop" Value="False" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border
                            x:Name="border"
                            Background="Transparent"
                            BorderThickness="0"
                            SnapsToDevicePixels="true">
                            <ContentPresenter
                                x:Name="contentPresenter"
                                Margin="0"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Focusable="False"
                                RecognizesAccessKey="True" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="border" Property="Background" Value="{StaticResource PrimaryMediumBrush}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="border" Property="Background" Value="{StaticResource PrimaryHoverBrush}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="TitleBarCloseButtonStyle" TargetType="Button">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
            <Setter Property="IsTabStop" Value="False" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border
                            x:Name="border"
                            Background="Transparent"
                            BorderThickness="0"
                            SnapsToDevicePixels="true">
                            <ContentPresenter
                                x:Name="contentPresenter"
                                Margin="0"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Focusable="False"
                                RecognizesAccessKey="True" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="border" Property="Background" Value="{StaticResource PrimaryMediumBrush}" />
                                <Setter Property="Foreground" Value="{DynamicResource MouseOverWindowCloseButtonForegroundBrush}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="border" Property="Background" Value="{StaticResource PrimaryHighlightBrush}" />
                                <Setter Property="Foreground" Value="{DynamicResource MouseOverWindowCloseButtonForegroundBrush}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--Custom Toolbar Button: Text Only -->
        <Style x:Key="TitleBarButtonStyle_B" TargetType="{x:Type Button}">
            <!--Set default properties of the button-->
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Content" Value=""/>
            <Setter Property="Tag" Value=""/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="MinWidth" Value="16"/>
            <Setter Property="MinHeight" Value="16"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
            <!--Set appearance of the element-->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <!--Element appearance with behaviour of a 'Button'-->
                        <Border CornerRadius="0" Background="{TemplateBinding Background}">
                            <StackPanel Orientation="Horizontal">
                                <Image x:Name="ButtonIcon" Source="{TemplateBinding Tag}" Stretch="Fill" Width="18" Height="18" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="10,0,10,0"/>
                                <Label x:Name="ButtonLabel" Content="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}" FontSize="12" Margin="0,0,8,0"/>
                            </StackPanel>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Content" Value="">
                                <Setter TargetName="ButtonLabel" Property="Visibility" Value="Collapsed"/>
                                <Setter TargetName="ButtonLabel" Property="Margin" Value="0"/>
                                <Setter TargetName="ButtonLabel" Property="Padding" Value="0"/>
                            </Trigger>
                            <Trigger Property="Tag" Value="">
                                <Setter TargetName="ButtonIcon" Property="Visibility" Value="Collapsed"/>
                                <Setter TargetName="ButtonIcon" Property="Margin" Value="0"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <!--Set Triggers and Effects-->
            <Style.Triggers>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="{StaticResource PrimaryBorderBrush}"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource PrimaryHoverBrush}"/>
                    <Setter Property="BorderThickness" Value="4"/>
                    <Setter Property="BorderBrush" Value="{StaticResource PrimaryDarkBrush}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" Value="0.5"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="RenderTransform">
                        <Setter.Value>
                            <ScaleTransform ScaleX=".96" ScaleY=".96" />
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

    </Window.Resources>

    <Window.InputBindings>
        <KeyBinding
            Key="N"
            Command="{Binding NewCommand}"
            Modifiers="Control" />
        <KeyBinding
            Key="S"
            Command="{Binding SaveCommand}"
            Modifiers="Control" />
        <KeyBinding
            Key="O"
            Command="{Binding OpenCommand}"
            Modifiers="Control" />
        <KeyBinding
            Key="O"
            Command="{Binding OpenCommand}"
            Modifiers="Control+Shift" />
    </Window.InputBindings>

    <Border Name="RootGrid" Style="{StaticResource WindowMainPanelStyle}">

        <Grid Name="ContentGrid">
            <Grid.RowDefinitions>
                <RowDefinition Height="30" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <!-- Title bar -->
            <Grid Grid.Row="0" Background="{StaticResource PrimaryLightBrush}" VerticalAlignment="Top">

                <StackPanel Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Left">
                    <Image Source="{StaticResource Favicon}" Stretch="Fill" MinWidth="16" MinHeight="16" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="8,4"/>
                    <Label Content="Bauphysik Tool" FontSize="12" VerticalAlignment="Center" Margin="0,0,16,0"/>
                    <Button ToolTip="Neues Projekt" Style="{StaticResource TitleBarButtonStyle_B}" Tag="{StaticResource ButtonIcon_NewProject_Flat}" Command="{Binding NewCommand}" Margin="4,0"/>
                    <Button ToolTip="Projekt speichern" Style="{StaticResource TitleBarButtonStyle_B}" Tag="{StaticResource ButtonIcon_Save_Flat}" Command="{Binding SaveCommand}" Visibility="{Binding SaveButtonVisibility}" Margin="4,0"/>
                    <Button ToolTip="Projekt speichern unter" Style="{StaticResource TitleBarButtonStyle_B}" Tag="{StaticResource ButtonIcon_SaveTo_Flat}" Command="{Binding SaveToCommand}" Visibility="{Binding SaveButtonVisibility}" Margin="4,0"/>
                    <Button ToolTip="Projekt öffnen" Style="{StaticResource TitleBarButtonStyle_B}" Tag="{StaticResource ButtonIcon_OpenFile_Flat}" Command="{Binding OpenCommand}" Margin="4,0"/>
                    <Button ToolTip="Programm Infos" Style="{StaticResource TitleBarButtonStyle_B}" Tag="{StaticResource ButtonIcon_Info_Flat}" Command="{Binding ShowInfoCommand}" Margin="4,0"/>
                </StackPanel>

                <StackPanel Orientation="Horizontal" Margin="8,0" VerticalAlignment="Center" HorizontalAlignment="Center">
                    <Label Content="{Binding Title}" FontSize="12"/>
                    <Ellipse Fill="{Binding IsEditedTagColorCode}" Width="8" Height="8"/>
                </StackPanel>
                
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                    <Button Click="MinimizeCommand" RenderOptions.EdgeMode="Aliased" Style="{StaticResource TitleBarButtonStyle}">
                        <Path
                            Width="46"
                            Height="32"
                            Data="M 18,15 H 28"
                            Stroke="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}"
                            StrokeThickness="1" />
                    </Button>
                    <Button Name="MaximizeButton" Click="MaximizeCommand" Style="{StaticResource TitleBarButtonStyle}">
                        <Path
                            Width="46"
                            Height="32"
                            Data="M 18.5,10.5 H 27.5 V 19.5 H 18.5 Z"
                            Stroke="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}"
                            StrokeThickness="1" />
                    </Button>
                    <Button Name="RestoreButton" Click="MaximizeCommand" Style="{StaticResource TitleBarButtonStyle}">
                        <Path
                            Width="46"
                            Height="32"
                            Data="M 18.5,12.5 H 25.5 V 19.5 H 18.5 Z M 20.5,12.5 V 10.5 H 27.5 V 17.5 H 25.5"
                            Stroke="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}"
                            StrokeThickness="1" />
                    </Button>
                    <Button Name="CloseButton" Click="CloseCommand" Style="{StaticResource TitleBarCloseButtonStyle}">
                        <Path
                            Width="46"
                            Height="32"
                            Data="M 18,11 27,20 M 18,20 27,11"
                            Stroke="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}"
                            StrokeThickness="1" />
                    </Button>
                </StackPanel>
            </Grid>

            <!-- Main Grid for Content -->
            <Grid Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="220"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <!-- Left Selection Box Top-->
                <Border x:Name="ProjectBoxHeader" Grid.Column="0" Grid.Row="0" Background="{StaticResource PrimaryDarkHighlightBrush}" BorderThickness="0">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" MaxHeight="120"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <StackPanel Grid.Row="0" Orientation="Vertical" Margin="16,16,16,0">
                            <Label Content="Projekt:" Foreground="White" Margin="-4"/>
                            <TextBlock Text="{Binding ProjectName}" MaxWidth="152" MaxHeight="58" FontWeight="Bold" Foreground="White" HorizontalAlignment="Center" TextAlignment="Center" TextWrapping="Wrap" FontSize="14"/>
                        </StackPanel>

                        <!-- TOP: Parent Page Selection -->
                        <ListBox Grid.Row="1" x:Name="ParentPageListBox"
                                 ItemsSource="{Binding ParentPages}"
                                 ItemTemplate="{StaticResource ParentPageItemTemplate}"
                                 ItemContainerStyle="{StaticResource ParentPageItemStyle}"
                                 Style="{StaticResource ParentPagesListBoxStyle}"
                                 Tag="{Binding IsProjectLoaded}"
                                 Margin="16,8,16,0"/>
                    </Grid>

                </Border>

                <!--Left Selection Box Bottom-->
                <ItemsControl Grid.Row="1"
                              Grid.Column="0"
                              ItemsSource="{Binding AvailableChildGroups}"
                              Background="{StaticResource PrimaryDarkBrush}"
                              Margin="0"
                              Padding="0">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <StackPanel Margin="16,8,16,0">
                                <StackPanel.Style>
                                    <Style TargetType="StackPanel">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsEnabled}" Value="False">
                                                <Setter Property="Visibility" Value="Collapsed"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </StackPanel.Style>
                                <!-- Header -->
                                <TextBlock Text="{Binding GroupHeader}"
                                           FontWeight="Bold"
                                           FontSize="14"
                                           Foreground="{StaticResource PrimaryMediumBrush}"
                                           Margin="0">
                                    <TextBlock.Style>
                                        <Style TargetType="TextBlock">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding GroupHeader}" Value="">
                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>

                                <!-- Child Pages List -->
                                <ListBox ItemsSource="{Binding ChildPages}"
                                         ItemTemplate="{StaticResource ChildPageItemTemplate}"
                                         ItemContainerStyle="{StaticResource ChildPageItemStyle}"
                                         Style="{StaticResource ChildPagesListBoxStyle}"/>
                            </StackPanel>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>

                <!--The Actual Pages shown here-->
                <ContentControl x:Name="MainWindowContent"
                                ContentTemplateSelector="{StaticResource PageTemplateSelector}"
                                Grid.Column="1"
                                Grid.Row="0"
                                Grid.RowSpan="2"/>

                <!--Toast Notification-->
                <controls:ToastNotification x:Name="Toast" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Visibility="Collapsed" HorizontalAlignment="Stretch" VerticalAlignment="Top"/>
            </Grid>


        </Grid>

    </Border>

</Window>
