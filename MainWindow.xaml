<Window x:Class="BauphysikToolWPF.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:BauphysikToolWPF"
        xmlns:ui="clr-namespace:BauphysikToolWPF.UI"
        xmlns:vm="clr-namespace:BauphysikToolWPF.UI.ViewModels"
        xmlns:controls="clr-namespace:BauphysikToolWPF.UI.CustomControls"
        xmlns:system="clr-namespace:System;assembly=System.Runtime"
        mc:Ignorable="d"
        Title="MainWindow"
        Height="700"
        Width="1200"
        Background="{StaticResource PrimaryLightBrush}"
        WindowStartupLocation="CenterScreen"
        ResizeMode="CanResize"
        WindowStyle="None"
        AllowsTransparency="True">

    <Window.DataContext>
        <!-- Sets the Data Reference (Source) for 'Binding' in this XAML -->
        <vm:MainWindow_VM/>
    </Window.DataContext>

    <!-- https://www.codeproject.com/Articles/5275552/WPF-Compact-Navigation-Menu -->
    <Window.Resources>
        
        <!-- Checks if an ListBoxItem from ItemsSource is a Header or not-->
        <controls:IsHeaderConverter x:Key="IsHeaderConverter"/>

        <!--The actual content pages: Used in MainWindow.xaml ContentControl to set the current page-->
        <DataTemplate x:Key="FO0_ProjectPage">
            <ui:FO0_ProjectPage/>
        </DataTemplate>
        <DataTemplate x:Key="FO0_LandingPage">
            <ui:FO0_ElementsPage/>
        </DataTemplate>
        <DataTemplate x:Key="FO1_SetupLayer">
            <ui:FO1_SetupLayer/>
        </DataTemplate>
        <DataTemplate x:Key="FO1_SetupEnv">
            <ui:FO1_SetupEnv/>
        </DataTemplate>
        <DataTemplate x:Key="FO2_Temperature">
            <ui:FO2_Temperature/>
        </DataTemplate>
        <DataTemplate x:Key="FO3_Moisture">
            <ui:FO3_Moisture/>
        </DataTemplate>
        <DataTemplate x:Key="FO4_Dynamic">
            <ui:FO4_Dynamic/>
        </DataTemplate>

        <!--Content Pages on right side-->
        <Style x:Key="NavigationContentStyle" TargetType="ContentControl">
            <!--Default First Page-->
            <Setter Property="ContentTemplate" Value="{StaticResource FO0_ProjectPage}"/>
            <!--
            Switch between Pages based on 'SelectedItem' of 'NavigationMenuListBox'
            Item value comes from 'ItemsSource' (type of ListBoxItem), or via 'Tag'
            -->
            <Style.Triggers>
                <DataTrigger Binding="{Binding ElementName=ProjectBoxHeader, Path=Tag}" Value="ProjectPage">
                    <Setter Property="ContentTemplate" Value="{StaticResource FO0_ProjectPage}"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding ElementName=ProjectBoxHeader, Path=Tag}" Value="LandingPage">
                    <Setter Property="ContentTemplate" Value="{StaticResource FO0_LandingPage}"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding ElementName=NavigationMenuListBox, Path=SelectedItem}" Value="SetupLayer">
                    <Setter Property="ContentTemplate" Value="{StaticResource FO1_SetupLayer}"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding ElementName=NavigationMenuListBox, Path=SelectedItem}" Value="SetupEnv">
                    <Setter Property="ContentTemplate" Value="{StaticResource FO1_SetupEnv}"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding ElementName=NavigationMenuListBox, Path=SelectedItem}" Value="Temperature">
                    <Setter Property="ContentTemplate" Value="{StaticResource FO2_Temperature}"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding ElementName=NavigationMenuListBox, Path=SelectedItem}" Value="Moisture">
                    <Setter Property="ContentTemplate" Value="{StaticResource FO3_Moisture}"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding ElementName=NavigationMenuListBox, Path=SelectedItem}" Value="Dynamic">
                    <Setter Property="ContentTemplate" Value="{StaticResource FO4_Dynamic}"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="ToolBarTray">
            <Setter Property="Background" Value="White"/>
        </Style>

        <!-- Custom style for the ToolBar -->
        <Style TargetType="ToolBar">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToolBar">
                        <Border Background="White" BorderBrush="DarkGray" BorderThickness="0,0,0,2" >
                            <StackPanel Orientation="Horizontal" IsItemsHost="True"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--
        NavigationMenu ListBoxItem values: Used in NavigationMenuListBox as ItemsSource
        Used as Binding Values within the NavigationMenu to toggle between the pages
        and set corresponding style of the ListBoxItem
        -->
        <x:Array x:Key="NavigationMenuItems" Type="system:String">
            <system:String>Header1</system:String>
            <system:String>SetupLayer</system:String>  <!--SelectedIndex: 1-->
            <system:String>SetupEnv</system:String>    <!--SelectedIndex: 2-->
            <system:String>Header2</system:String>
            <system:String>Temperature</system:String> <!--SelectedIndex: 4-->
            <system:String>Moisture</system:String>    <!--SelectedIndex: 5-->
            <system:String>Dynamic</system:String>    <!--SelectedIndex: 6-->
        </x:Array>

        <!--NavigationMenu ListBox appearance: Used in ListBox as Style -->
        <Style x:Key="NavigationMenuListBoxStyle" TargetType="{x:Type ListBox}">
            <Setter Property="Background" Value="{StaticResource PrimaryDarkBrush}"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Visibility" Value="Visible"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <!-- Nothing selected by default -->
            <Setter Property="SelectedIndex" Value="-1"/>
            <Setter Property="Padding" Value="8"/>
            <Setter Property="Width" Value="Auto"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBox}">
                        <Border Background="{TemplateBinding Background}" BorderThickness="0" Padding="0" SnapsToDevicePixels="true">
                            <ScrollViewer Padding="{TemplateBinding Padding}" Focusable="false">
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </ScrollViewer>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <!--Don't show ListBox when on the LandingPage and the first Header entry (acts like ListBoxItem) -->
            <!--<Style.Triggers>
                <DataTrigger Binding="{Binding ElementName=NavigationMenuListBox, Path=SelectedItem}" Value="Header1">
                    <Setter Property="Visibility" Value="Collapsed"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding ElementName=NavigationMenuListBox, Path=SelectedItem}" Value="LandingPage">
                    <Setter Property="Visibility" Value="Collapsed"/>
                </DataTrigger>
            </Style.Triggers>-->
        </Style>

        <!--NavigationMenu ListBox entry appearance and behaviour: Used in ListBox as ItemContainerStyle-->
        <Style x:Key="NavigationMenuItemStyle" TargetType="{x:Type ListBoxItem}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{StaticResource PrimaryLightBrush}"/>
            <Setter Property="Margin" Value="0,0,0,8"/>
            <Setter Property="ToolTip" Value="{Binding}"/>
            <Setter Property="Visibility" Value="Visible"/>
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <!--Triggers & Effects-->
            <Style.Triggers>
                <!--When a ListBox entry is NOT a Header, apply this Template-->
                <DataTrigger Binding="{Binding Converter={StaticResource IsHeaderConverter}}" Value="False">
                    <!-- Template for the Button-like entries-->
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                <Border x:Name="listBox_Border"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}" 
                                    Background="{TemplateBinding Background}"
                                    Padding="{TemplateBinding Padding}"
                                    CornerRadius="8"
                                    SnapsToDevicePixels="true">
                                    <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Border>
                                <!-- Triggers ONLY usable in this Template -->
                                <ControlTemplate.Triggers>
                                    <!--When a ListBox entry is Selected-->
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter TargetName="listBox_Border" Property="Background" Value="{StaticResource PrimaryDarkHighlightBrush}"/>
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="{StaticResource PrimaryHighlightBrush}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
                <!--When a ListBox entry IS a Header, apply this Template-->
                <DataTrigger Binding="{Binding Converter={StaticResource IsHeaderConverter}}" Value="True">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="IsTabStop" Value="False"/>
                    <Setter Property="IsEnabled" Value="False"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding ElementName=NavigationMenuListBox, Path=SelectedIndex}" Value="-1">
                    <Setter Property="Visibility" Value="Collapsed"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <!--
        ListBox entry content: Used in ListBox as ItemTemplate
        The Content Located inside of 'NavigationMenuItemStyle'
        -->
        <DataTemplate x:Key="NavigationMenuItemTemplate">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Image x:Name="MenuItemIcon" Grid.Column="0" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="4" MaxWidth="24"/>
                <Label x:Name="MenuItemLabel" Grid.Column="1" HorizontalContentAlignment="Center" Foreground="White" FontSize="14" Margin="0,4,4,4"/>
            </Grid>
            <!--
            Binding is ItemsSource from 'NavigationMenuListBox'
            Changes the Icon and Text of the entry based on the ItemsSource Values
            -->
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding}" Value="Header1">
                    <Setter TargetName="MenuItemLabel" Property="Content" Value="BAUTEIL ERSTELLEN"/>
                    <Setter TargetName="MenuItemLabel" Property="Foreground" Value="{StaticResource PrimaryMediumBrush}"/>
                    <Setter TargetName="MenuItemLabel" Property="FontWeight" Value="Bold"/>
                    <Setter TargetName="MenuItemLabel" Property="FontSize" Value="12"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding}" Value="SetupLayer">
                    <Setter TargetName="MenuItemIcon" Property="Source" Value="{StaticResource ButtonIcon_Layer_W}"/>
                    <Setter TargetName="MenuItemLabel" Property="Content" Value="Schichtaufbau"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding}" Value="SetupEnv">
                    <Setter TargetName="MenuItemIcon" Property="Source" Value="{StaticResource ButtonIcon_EnvVar_W}"/>
                    <Setter TargetName="MenuItemLabel" Property="Content" Value="Umgebung"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding}" Value="Header2">
                    <Setter TargetName="MenuItemLabel" Property="Content" Value="ERGEBNISSE"/>
                    <Setter TargetName="MenuItemLabel" Property="Foreground" Value="{StaticResource PrimaryMediumBrush}"/>
                    <Setter TargetName="MenuItemLabel" Property="FontWeight" Value="Bold"/>
                    <Setter TargetName="MenuItemLabel" Property="FontSize" Value="12"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding}" Value="Temperature">
                    <Setter TargetName="MenuItemIcon" Property="Source" Value="{StaticResource ButtonIcon_Temperature_W}"/>
                    <Setter TargetName="MenuItemLabel" Property="Content" Value="Temperaturkurve"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding}" Value="Moisture">
                    <Setter TargetName="MenuItemIcon" Property="Source" Value="{StaticResource ButtonIcon_Moisture_W}"/>
                    <Setter TargetName="MenuItemLabel" Property="Content" Value="Glaser-Diagramm"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding}" Value="Dynamic">
                    <Setter TargetName="MenuItemIcon" Property="Source" Value="{StaticResource ButtonIcon_Moisture_W}"/>
                    <Setter TargetName="MenuItemLabel" Property="Content" Value="Dynamic"/>
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>

        <Style x:Key="RectBorderStyle" TargetType="Rectangle">
            <Setter Property="Focusable" Value="False" />
            <Setter Property="Fill" Value="Transparent" />
            <Setter Property="Tag" Value="{Binding RelativeSource={RelativeSource AncestorType=Window}}" />
            <EventSetter Event="MouseLeftButtonDown" Handler="Resize_Init"/>
            <EventSetter Event="MouseLeftButtonUp" Handler="Resize_End"/>
            <EventSetter Event="MouseMove" Handler="Resizing_Form"/>
        </Style>

    </Window.Resources>

    <Grid>
    
        <DockPanel>

            <!-- Custom title bar -->
            <Border Background="{StaticResource PrimaryLightBrush}" BorderBrush="{StaticResource PrimaryBorderBrush}" BorderThickness="0,0,0,2" Height="32" DockPanel.Dock="Top" MouseDown="DockPanelOnMouseDown">
                <DockPanel>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                        <Button Content="Minimize" Width="75"/>
                        <Button Content="Maximize" Width="75"/>
                        <Button Content="Close" Width="75"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                        <Button Content="Projektdatei speichern" Style="{StaticResource ButtonStyleToolbar}" Tag="{StaticResource ButtonIcon_Cancel_B}" Click="MinimizeCommand" Margin="4,0,0,4"/>
                        <Button Content="Projektdatei speichern" Style="{StaticResource ButtonStyleToolbar}" Tag="{StaticResource ButtonIcon_Cancel_B}" Click="MaximizeCommand" Margin="4,0,0,4"/>
                        <Button Content="Projektdatei speichern" Style="{StaticResource ButtonStyleToolbar}" Tag="{StaticResource ButtonIcon_Cancel_B}" Click="CloseCommand" Margin="4,0,0,4"/>
                    </StackPanel>
                </DockPanel>
            </Border>
            
            <!-- Main Grid for Content -->
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <!-- Left Selection Box Top-->
                <Border x:Name="ProjectBoxHeader" Grid.Column="1" Grid.Row="0" Background="{StaticResource PrimaryDarkHighlightBrush}" BorderThickness="0">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" MaxHeight="120"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <StackPanel Orientation="Vertical" Margin="16,16,16,0">
                            <Label Content="Projekt:" Foreground="White" Margin="-4"/>
                            <TextBlock Text="{Binding CurrentProject.Name}" MaxWidth="152" FontWeight="Bold" Foreground="White" HorizontalAlignment="Center" TextAlignment="Center" TextWrapping="Wrap" FontSize="14"/>
                        </StackPanel>
                        <Button Grid.Row="1" Content="Projektdaten" Style="{StaticResource ButtonStyle03_B}" Tag="{StaticResource ButtonIcon_Project_B}" Command="{Binding SwitchPageCommand}" CommandParameter="{x:Static local:NavigationContent.ProjectPage}" Margin="16"/>
                        <Button Grid.Row="2" Content="Bauteilkatalog" Style="{StaticResource ButtonStyle03_B}" Tag="{StaticResource ButtonIcon_Elements_B}" Command="{Binding SwitchPageCommand}" CommandParameter="{x:Static local:NavigationContent.LandingPage}" Margin="16,0,16,16"/>
                    </Grid>
                </Border>

                <!--Left Selection Box Bottom-->
                <ListBox x:Name="NavigationMenuListBox"
                         Grid.Column="1"
                         Grid.Row="1"                 
                         Style="{StaticResource NavigationMenuListBoxStyle}"
                         ItemsSource="{StaticResource NavigationMenuItems}"
                         ItemContainerStyle="{DynamicResource NavigationMenuItemStyle}"
                         ItemTemplate="{DynamicResource NavigationMenuItemTemplate}"/>

                <!--The Actual Pages shown here-->
                <ContentControl x:Name="MainWindowContent" Grid.Column="2" Grid.Row="0" Grid.RowSpan="2" Style="{StaticResource NavigationContentStyle}"/>
            </Grid>


        </DockPanel>


        <!--Resizing Grips-->
        <Rectangle x:Name="leftSizeGrip"
                   Width="10"
                   HorizontalAlignment="Left"
                   Cursor="SizeWE"
                   Style="{StaticResource RectBorderStyle}"/>

        <Rectangle x:Name="rightSizeGrip"
                   Width="10"
                   HorizontalAlignment="Right"
                   Cursor="SizeWE"
                   Style="{StaticResource RectBorderStyle}" />
        <Rectangle x:Name="topSizeGrip"
                   Height="10"
                   VerticalAlignment="Top"
                   Cursor="SizeNS"
                   Style="{StaticResource RectBorderStyle}" />
        <Rectangle x:Name="bottomSizeGrip"
                   Height="10"
                   VerticalAlignment="Bottom"
                   Cursor="SizeNS"
                   Style="{StaticResource RectBorderStyle}" />
        <!--  Corners  -->
        <Rectangle Name="topLeftSizeGrip"
                   Width="10"
                   Height="10"
                   HorizontalAlignment="Left"
                   VerticalAlignment="Top"
                   Cursor="SizeNWSE"
                   Style="{StaticResource RectBorderStyle}" />
        <Rectangle Name="bottomRightSizeGrip"
                   Width="10"
                   Height="10"
                   HorizontalAlignment="Right"
                   VerticalAlignment="Bottom"
                   Cursor="SizeNWSE"
                   Style="{StaticResource RectBorderStyle}" />
        <Rectangle Name="topRightSizeGrip"
                   Width="10"
                   Height="10"
                   HorizontalAlignment="Right"
                   VerticalAlignment="Top"
                   Cursor="SizeNESW"
                   Style="{StaticResource RectBorderStyle}" />
        <Rectangle Name="bottomLeftSizeGrip"
                   Width="10"
                   Height="10"
                   HorizontalAlignment="Left"
                   VerticalAlignment="Bottom"
                   Cursor="SizeNESW"
                   Style="{StaticResource RectBorderStyle}" />


    </Grid>



</Window>
