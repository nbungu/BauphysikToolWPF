<UserControl x:Class="BauphysikToolWPF.UI.FO1_Setup"
            xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
            xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
            xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
            xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
            xmlns:local="clr-namespace:BauphysikToolWPF.UI"  
            xmlns:env="clr-namespace:BauphysikToolWPF.EnvironmentData"
            xmlns:vm="clr-namespace:BauphysikToolWPF.UI.ViewModels"
            mc:Ignorable="d"
            d:DesignHeight="700" d:DesignWidth="1200">

    <UserControl.DataContext>
        <!-- globally sets a reference for Bindings in this xaml-->
        <vm:FO1_ViewModel/>
    </UserControl.DataContext>
    
    <!--
    the DataContext is used to specify the data source for a UI element,
    while the ItemsSource is used to specify the data source for a list of items.
    Both can be used for binding to display and modify data in the UI.
    -->

    <UserControl.Resources>
        <!--
        Defines a Template for the Items in the LayerListView.
        The Bindings are retrieved from the ItemsSource which is set by the backend.
        -->
        <DataTemplate x:Key="LVItem_DesignTemplate">
            <Grid Margin="4">
                <Grid.RowDefinitions>
                    <RowDefinition Height="24" />
                    <RowDefinition Height="24" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="200"/>
                    <ColumnDefinition Width="72"/>
                    <ColumnDefinition Width="120"/>
                </Grid.ColumnDefinitions>

                <Grid Grid.RowSpan="2">
                    <Ellipse Fill="{Binding Material.ColorCode}" Height="36" Width="36" Margin="0,0,8,0" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    <Label Content="{Binding LayerPosition}" Margin="0,0,8,0" Foreground="White" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="16"/>
                </Grid>
                <Label Grid.Column="1" Content="{Binding Material.Name}" Height="28" FontWeight="Bold"/>
                <Label Grid.Column="1" Grid.Row="1" Content="{Binding Material.Category}" Height="28" FontStyle="Italic" VerticalAlignment="Bottom"/>
                <Label Grid.Column="2" Grid.RowSpan="2" Content="{Binding LayerThickness}" ContentStringFormat='d = {0} cm' VerticalAlignment="Center"/>
                <Line Grid.Column="2" Grid.RowSpan="2" Y2="40" VerticalAlignment="Center" HorizontalAlignment="Right" Stroke="LightGray" StrokeThickness="0.5"/>
                <Label Grid.Column="3" Grid.RowSpan="2" Content="{Binding LayerResistance}" ContentStringFormat='Ri = {0} (m²K)/W' VerticalAlignment="Center" Margin="8,0,0,0"/>
                
                <!--TODO make button appear only if lvitem is clicked
                <Button Content="T" Grid.Column="4" Grid.RowSpan="2" Margin="8,0,0,0">
                    <Button.Style>
                        <Style TargetType="{x:Type Button}">
                            <Setter Property="Visibility" Value="Hidden"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsMouseOver, ElementName=layers_ListView}" Value="True">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                -->

            </Grid>
        </DataTemplate>

        <Style x:Key="LVItem_Properties" TargetType="{x:Type ListViewItem}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="ContextMenu">
                <Setter.Value>
                    <ContextMenu>
                        <MenuItem Name="menuItemClose" Header="Exit"/>
                        <MenuItem Name="menuItemOpen" Header="Open"/>
                    </ContextMenu>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="CustomButton" TargetType="{x:Type Button}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
            <Setter Property="RenderTransform">
                <Setter.Value>
                    <ScaleTransform ScaleX="1" ScaleY="1" />
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="RenderTransform">
                        <Setter.Value>
                            <ScaleTransform ScaleX=".96" ScaleY=".96" />
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="TextBoxStyle" TargetType="TextBox">
            <!--These setters are for the default appearance-->
            <Setter Property="Width" Value="40"/>
            <Setter Property="VerticalAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <EventSetter Event="PreviewTextInput" Handler="numericData_PreviewTextInput"/>
        </Style>

    </UserControl.Resources>

    <!--Main Grid: 2x2-->
    <Grid Background="#EDEDED">

        <Grid.RowDefinitions>
            <RowDefinition Height="64"/>
            <RowDefinition Height=".6*"/>
            <RowDefinition Height=".4*"/>
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width=".5*"/>
            <ColumnDefinition Width=".5*"/>
        </Grid.ColumnDefinitions>

        <!--Top Left -->
        <Label Grid.Row="0" Grid.Column="0" Content="Schichten des Bauteils X" HorizontalAlignment="Left" VerticalAlignment="Center" FontWeight="Bold" FontSize="16" Margin="16"/>
        <!--Top Right -->
        <Label Grid.Row="0" Grid.Column="1" Content="Bauteilquerschnitt" HorizontalAlignment="Left" VerticalAlignment="Center" FontWeight="Bold" FontSize="16" Margin="16"/>
        <!--Middle Left -->
        <Grid Grid.Row="1" Grid.Column="0" Margin="16">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <StackPanel Orientation="Horizontal" Grid.Row="0">
                <Button x:Name="addLayer_Button" Style="{StaticResource CustomButton}" Click="addLayerClicked" Margin="0,0,8,8">
                    <StackPanel Orientation="Horizontal" Margin="4,0,16,0">
                        <Image Source="/Resources/Icons/GL_010x80_create.png" Stretch="Fill" Height="36" Width="36" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                        <TextBlock Text="Add Layer" VerticalAlignment="Center" Margin="4,0,0,0"/>
                    </StackPanel>
                </Button>

                <Button x:Name="deleteLayer_Button" Style="{StaticResource CustomButton}" Click="deleteLayerClicked" Margin="0,0,8,8">
                    <StackPanel Orientation="Horizontal" Margin="4,0,16,0">
                        <Image Source="/Resources/Icons/GL_011x80_delete.png" Stretch="Fill" Height="30" Width="30" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                        <TextBlock Text="Delete Layer" VerticalAlignment="Center" Margin="4,0,0,0"/>
                    </StackPanel>
                </Button>

                <Button x:Name="deleteAllLayers_Button" Style="{StaticResource CustomButton}" Click="deleteAllLayersClicked" Margin="0,0,8,8">
                    <StackPanel Orientation="Horizontal" Margin="4,0,16,0">
                        <Image Source="/Resources/Icons/GL_011x80_delete.png" Stretch="Fill" Height="30" Width="30" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                        <TextBlock Text="Delete All" VerticalAlignment="Center" Margin="4,0,0,0"/>
                    </StackPanel>
                </Button>

                <Button x:Name="editLayer_Button" Style="{StaticResource CustomButton}" Click="editLayerClicked" Margin="0,0,8,8">
                    <StackPanel Orientation="Horizontal" Margin="4,0,16,0">
                        <Image Source="/Resources/Icons/GL_015x80_edit.png" Stretch="Fill" Height="30" Width="30" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                        <TextBlock Text="Edit Layer" VerticalAlignment="Center" Margin="4,0,0,0"/>
                    </StackPanel>
                </Button>
            </StackPanel>

            <ListView x:Name="layers_ListView"
                      Grid.Row="1"
                      ItemsSource="{Binding Layers, Mode=OneWay}"
                      ItemTemplate="{StaticResource LVItem_DesignTemplate}"
                      ItemContainerStyle="{StaticResource LVItem_Properties}"
                      VerticalAlignment="Stretch"
                      HorizontalAlignment="Stretch"
                      SelectionChanged="layers_ListView_SelectionChanged"
                      SelectionMode="Single"/>
            <!--ItemsSource gets updated by backend-->
        </Grid>

        <!--Middle Right-->
        <Grid Grid.Row="1" Grid.RowSpan="2" Grid.Column="1" Margin="16">
            <Grid.RowDefinitions>
                <RowDefinition Height="32" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <Label Content="Außen - Linke Seite" HorizontalContentAlignment="Left"/>
            <Label x:Name="layer_Label" Content="-" HorizontalContentAlignment="Center" />
            <Label Content="Innen - Rechte Seite" HorizontalContentAlignment="Right" />

            <Viewbox Grid.Row="1" ClipToBounds="True">
                <!--Canvas inside of ViewBox makes it dynamically sizable-->
                <Canvas x:Name="layers_Canvas" Width="400" Height="400" SnapsToDevicePixels="True"/>
                <!-- Canvas Children defined in backend-->
            </Viewbox>

        </Grid>

        <!--Bottom Left -->
        <Grid Grid.Row="2" Grid.Column="0" Margin="16">
            <Grid.RowDefinitions>
                <RowDefinition Height="32" />
                <RowDefinition Height="50" />
                <RowDefinition Height="50" />
                <RowDefinition Height="50" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="24" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <Label Content="Außenseitige Randbedingungen" FontWeight="Bold" Grid.Column="0"/>
            <Label Content="Innenseitige Randbedingungen" FontWeight="Bold" Grid.Column="2"/>

            <!--Außenseitige Randbedingungen-->

            <Label Grid.Row="1" Content="Air Temperature: " VerticalAlignment="Top" VerticalContentAlignment="Center" HorizontalAlignment="Left"/>
            <StackPanel Grid.Row="1" Orientation="Horizontal" VerticalAlignment="Bottom" Height="24">
                <ComboBox x:Name="Te_Category_Picker" ItemsSource="{Binding Te_Keys}" Width="152" VerticalAlignment="Stretch" SelectionChanged="Te_Category_Picker_SelectionChanged"/>
                <TextBox x:Name="Te_Input" Style="{StaticResource TextBoxStyle}"/>
                <Label Content="°C" Height="32" VerticalAlignment="Center" VerticalContentAlignment="Center"/>
            </StackPanel>
            <Label Grid.Row="2" Content="Rse: " VerticalAlignment="Top" VerticalContentAlignment="Center" HorizontalAlignment="Left"/>
            <StackPanel Grid.Row="2" Orientation="Horizontal" VerticalAlignment="Bottom" Height="24">
                <ComboBox x:Name="Rse_Category_Picker" ItemsSource="{Binding Rse_Keys}" Width="152" VerticalAlignment="Stretch" SelectionChanged="Rse_Category_Picker_SelectionChanged"/>
                <TextBox x:Name="Rse_Input" Style="{StaticResource TextBoxStyle}"/>
                <Label Content="(m²K)/W" Height="32" VerticalAlignment="Center" VerticalContentAlignment="Center"/>
            </StackPanel>
            <Label Grid.Row="3" Content="Rel. Humitdity: " VerticalAlignment="Top" VerticalContentAlignment="Center" HorizontalAlignment="Left"/>
            <StackPanel Grid.Row="3" Orientation="Horizontal" VerticalAlignment="Bottom" Height="24">
                <ComboBox x:Name="Rel_Fe_Category_Picker" ItemsSource="{Binding Rel_Fe_Keys}" Width="152" VerticalAlignment="Stretch" SelectionChanged="Rel_Fe_Category_Picker_SelectionChanged"/>
                <TextBox x:Name="Rel_Fe_Input" Style="{StaticResource TextBoxStyle}"/>
                <Label Content="%" Height="32" VerticalAlignment="Center" VerticalContentAlignment="Center"/>
            </StackPanel>

            <!--Mittlere Trennlinie-->
            <Line Grid.RowSpan="4" Grid.Column="1" Y2="600" VerticalAlignment="Stretch" HorizontalAlignment="Center" Stroke="#FFABADB3" StrokeThickness="1"/>

            <!--Innenseitige Randbedingungen-->
            <Label Grid.Row="1" Grid.Column="2" Content="Air Temperature: " VerticalAlignment="Top" VerticalContentAlignment="Center" HorizontalAlignment="Left"/>
            <StackPanel Grid.Row="1" Grid.Column="2" Orientation="Horizontal" VerticalAlignment="Bottom" Height="24">
                <ComboBox x:Name="Ti_Category_Picker" ItemsSource="{Binding Ti_Keys}" Width="152" VerticalAlignment="Stretch" SelectionChanged="Ti_Category_Picker_SelectionChanged"/>
                <TextBox x:Name="Ti_Input" Style="{StaticResource TextBoxStyle}"/>
                <Label Content="°C" Height="32" VerticalAlignment="Center" VerticalContentAlignment="Center"/>
            </StackPanel>
            <Label Grid.Row="2" Grid.Column="2" Content="Rsi: " VerticalAlignment="Top" VerticalContentAlignment="Center" HorizontalAlignment="Left"/>
            <StackPanel Grid.Row="2" Grid.Column="2" Orientation="Horizontal" VerticalAlignment="Bottom" Height="24">
                <ComboBox x:Name="Rsi_Category_Picker" ItemsSource="{Binding Rsi_Keys}" Width="152" VerticalAlignment="Stretch" SelectionChanged="Rsi_Category_Picker_SelectionChanged"/>
                <TextBox x:Name="Rsi_Input" Style="{StaticResource TextBoxStyle}"/>
                <Label Content="(m²K)/W" Height="32" VerticalAlignment="Center" VerticalContentAlignment="Center"/>
            </StackPanel>
            <Label  Grid.Row="3" Grid.Column="2" Content="Rel. Humitdity: " VerticalAlignment="Top" VerticalContentAlignment="Center" HorizontalAlignment="Left"/>
            <StackPanel Grid.Row="3" Grid.Column="2" Orientation="Horizontal" VerticalAlignment="Bottom" Height="24">
                <ComboBox x:Name="Rel_Fi_Category_Picker" ItemsSource="{Binding Rel_Fi_Keys}" Width="152" VerticalAlignment="Stretch" SelectionChanged="Rel_Fi_Category_Picker_SelectionChanged"/>
                <TextBox x:Name="Rel_Fi_Input" Style="{StaticResource TextBoxStyle}"/>
                <Label Content="%" Height="32" VerticalAlignment="Center" VerticalContentAlignment="Center"/>
            </StackPanel>
        </Grid>

        <GridSplitter Grid.Column="1" Grid.RowSpan="3" HorizontalAlignment="Left" Margin="-4,16,0,16" VerticalAlignment="Stretch" Width="8" Background="Transparent"/>

    </Grid>

</UserControl>
