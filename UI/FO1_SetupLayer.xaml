<UserControl x:Class="BauphysikToolWPF.UI.FO1_SetupLayer"
            xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
            xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
            xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
            xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
            xmlns:local="clr-namespace:BauphysikToolWPF"
            xmlns:controls="clr-namespace:BauphysikToolWPF.UI.CustomControls"
            xmlns:vm="clr-namespace:BauphysikToolWPF.UI.ViewModels"
            mc:Ignorable="d"
            d:DesignHeight="700" d:DesignWidth="1200" IsVisibleChanged="UserControl_IsVisibleChanged">

    <UserControl.DataContext>
        <!-- Sets the Data Reference (Source) for 'Binding' in this XAML -->
        <vm:FO1_LayerViewModel/>
    </UserControl.DataContext>
    
    <!--
    the DataContext is used to specify the data source for a UI element,
    while the ItemsSource is used to specify the data source for a list of items.
    Both can be used for binding to display and modify data in the UI.
    -->

    <UserControl.Resources>
        <!--
        Defines a Template for the Items in the LayerListView.
        The Bindings are retrieved from the ItemsSource which is set by the backend.
        -->
        <controls:ItemSelectedToEnabledConverter x:Key="ItemSelectedToEnabledConverter"/>

        <!-- Defines the type of UIElement used in the ItemsPanel-->
        <ItemsPanelTemplate x:Key="Canvas">
            <Canvas Width="320" Height="400" SnapsToDevicePixels="True"/>
        </ItemsPanelTemplate>

        <!-- Properties of a CanvasItem (Layer Rectangle). Sets the Drawing Coordinates of the container holding a CanvasItem -->
        <Style x:Key="CanvasContainerStyle" TargetType="ContentPresenter">
            <Setter Property="Canvas.Left" Value="{Binding Left}"/>
            <Setter Property="Canvas.Top" Value="{Binding Top}"/>
        </Style>

        <!-- Content and Styling of a CanvasItem (Layer Rectangle) -->
        <DataTemplate x:Key="CanvasItemStyle">
            <Grid Width="{Binding RectWidth}" Height="{Binding RectHeight}" Background="{Binding RectFill}">
                <Rectangle Fill="{Binding RectHatchPattern}" Stroke="{Binding RectStroke}" StrokeThickness="{Binding RectStrokeThickness}"/>
                <Ellipse Fill="White" Width="20" Height="20" Stroke="Black" StrokeThickness="1" VerticalAlignment="Top" Margin="-10"/>
                <Label Content="{Binding RectPosition}" VerticalAlignment="Top" Height="32" Margin="-16"/>
            </Grid>
        </DataTemplate>

        <!--
        https://learn.microsoft.com/en-us/dotnet/desktop/wpf/controls/gridview-overview?view=netframeworkdesktop-4.8
        https://github.com/mochan-b/GridViewCellFormatting
        Links the data content to a ListViewItem via Binding from ItemsSource, INSTEAD of ItemTemplate
        -->
        <GridView x:Key="LayerViewMode" AllowsColumnReorder="true" ColumnHeaderContainerStyle="{StaticResource ListViewHeaderStyle}">
            <!--Here: Binding source are Items (typeof 'Layer') from the ItemsSource Property-->
            <GridViewColumn Header="Pos." Width="Auto">
                <!--Custom Column Style for Column 0-->
                <GridViewColumn.CellTemplate>
                    <DataTemplate>
                        <Grid>
                            <Ellipse Fill="{Binding Material.ColorCode}" Height="28" Width="28" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            <Label Content="{Binding LayerPosition}" Foreground="White" FontWeight="Bold"/>
                        </Grid>
                    </DataTemplate>
                </GridViewColumn.CellTemplate>
            </GridViewColumn>
            <GridViewColumn DisplayMemberBinding="{Binding Material.Name}" Header="Material" Width="Auto"/>
            <GridViewColumn DisplayMemberBinding="{Binding Material.CategoryName}" Header="Kategorie" Width="Auto"/>
            <GridViewColumn DisplayMemberBinding="{Binding LayerThickness}" Header="Dicke [cm]" Width="Auto"/>
            <GridViewColumn DisplayMemberBinding="{Binding R_Value}" Header="R [m²K/W]" Width="Auto"/>
            <GridViewColumn DisplayMemberBinding="{Binding Sd_Thickness}" Header="sd [m]" Width="Auto"/>
            <GridViewColumn DisplayMemberBinding="{Binding AreaMassDensity}" Header="m' [kg/m²]" Width="Auto"/>
            <GridViewColumn DisplayMemberBinding="{Binding Material.DiffusionResistance}" Header="µ [-]" Width="Auto"/>
        </GridView>
        
    </UserControl.Resources>

    <!--Main Grid: 2x2-->
    <Grid Background="{StaticResource PrimaryLightBrush}">
        <Grid.RowDefinitions>
            <RowDefinition Height="56"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width=".6*"/>
            <ColumnDefinition Width=".4*"/>
        </Grid.ColumnDefinitions>

        <!--Top -->
        <Border Grid.ColumnSpan="2" Margin="16,16,16,0" CornerRadius="8" Background="{StaticResource PrimaryMediumBrush}">
            <Grid>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                    <Button Style="{StaticResource ButtonStyle03_Mini}" Command="{Binding SwitchPageCommand}" CommandParameter="{x:Static local:NavigationContent.LandingPage}" Tag="{StaticResource ButtonIcon_Prev_B}" Margin="4" ToolTip="Zurück zu: Bauteilübersicht"/>
                    <Label Content="Zurück"/>
                </StackPanel>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                    <Label Content="{Binding ElementName}" FontSize="18" FontWeight="Bold" FontStretch="Expanded" Margin="8,0,0,0"/>
                    <Label Content="{Binding ElementType}" ContentStringFormat="({0})" FontSize="18" FontStyle="Italic" Margin="4,0,0,0"/>
                    <Button Style="{StaticResource ButtonStyle03_Mini}" Command="{Binding EditElementCommand}" Tag="{StaticResource ButtonIcon_Edit_B}" Margin="4"/>
                </StackPanel>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                    <Label Content="Weiter"/>
                    <Button Style="{StaticResource ButtonStyle03_Mini}" Command="{Binding SwitchPageCommand}" CommandParameter="{x:Static local:NavigationContent.SetupEnv}" Tag="{StaticResource ButtonIcon_Next_B}" Margin="4" ToolTip="Weiter zu: Umgebungsbedingungen"/>
                </StackPanel>
            </Grid>
        </Border>

        <!--Middle Left -->
        <Grid Grid.Row="1" Grid.Column="0" Margin="16">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <StackPanel Grid.Row="0" Orientation="Horizontal">
                <Button Content="Hinzufügen" Style="{StaticResource ButtonStyle03_A}" Command="{Binding AddLayerCommand}" Tag="{StaticResource ButtonIcon_AddLayer_W}" Margin="0,0,8,0"/>
                <Button Style="{StaticResource ButtonStyle03_B_Icon}" Command="{Binding EditLayerCommand}" CommandParameter="{Binding SelectedItem, ElementName=layers_ListView}" Tag="{StaticResource ButtonIcon_Edit_B}" Margin="0,0,8,0" IsEnabled="{Binding ElementName=layers_ListView, Path=SelectedItem, Converter={StaticResource ItemSelectedToEnabledConverter}}"/>
                <Button Style="{StaticResource ButtonStyle03_B_Icon}" Command="{Binding MoveLayerUpCommand}" CommandParameter="{Binding SelectedItem, ElementName=layers_ListView}" Tag="{StaticResource ButtonIcon_Up_B}" Margin="0,0,8,0" IsEnabled="{Binding ElementName=layers_ListView, Path=SelectedItem, Converter={StaticResource ItemSelectedToEnabledConverter}}"/>
                <Button Style="{StaticResource ButtonStyle03_B_Icon}" Command="{Binding MoveLayerDownCommand}" CommandParameter="{Binding SelectedItem, ElementName=layers_ListView}" Tag="{StaticResource ButtonIcon_Down_B}" Margin="0,0,8,0" IsEnabled="{Binding ElementName=layers_ListView, Path=SelectedItem, Converter={StaticResource ItemSelectedToEnabledConverter}}"/>
                <Button Style="{StaticResource ButtonStyle03_B_Icon}" Command="{Binding DeleteLayerCommand}" CommandParameter="{Binding SelectedItem, ElementName=layers_ListView}" Tag="{StaticResource ButtonIcon_Delete_B}" Margin="0,0,8,0" IsEnabled="{Binding ElementName=layers_ListView, Path=SelectedItem, Converter={StaticResource ItemSelectedToEnabledConverter}}"/>
            </StackPanel>

            <!-- ItemsSource gets updated by backend -->
            <!-- This is 'PlacementTarget' as seen from ContextMenu -->
            <ListView x:Name="layers_ListView"
                      Grid.Row="2"
                      View="{StaticResource LayerViewMode}"
                      Style="{StaticResource ListViewStyle}"
                      ItemsSource="{Binding Layers}"                      
                      ItemContainerStyle="{StaticResource ListViewItemContainerStyle}"
                      SelectedIndex="{Binding SelectedLayer}"
                      Tag="{Binding}"
                      Margin="0,16,0,0">
                <!--TODO Add Style-->
                <ListView.ContextMenu>
                    <ContextMenu>
                        <!--
                        ContextMenu isn't a part of the visual tree of this page -> DataContext is not available.
                        You need to pass the data context in a different way, using PlacementTarget and the Tag property to expose the DataBinding (FO1_ViewModel).
                        The Tag Property can be used to hold any kind of user specified Data.
                        -->
                        <MenuItem Header="Bearbeiten" Command="{Binding Path=PlacementTarget.Tag.EditLayerCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}" CommandParameter="{Binding Path=PlacementTarget.SelectedItem, RelativeSource={RelativeSource AncestorType=ContextMenu}}">
                            <MenuItem.Icon>
                                <Image Source="{StaticResource ButtonIcon_Edit_B}"/>
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="Löschen" Command="{Binding Path=PlacementTarget.Tag.DeleteLayerCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}" CommandParameter="{Binding Path=PlacementTarget.SelectedItem, RelativeSource={RelativeSource AncestorType=ContextMenu}}">
                            <MenuItem.Icon>
                                <Image Source="{StaticResource ButtonIcon_DeleteLayer_B}"/>
                            </MenuItem.Icon>
                        </MenuItem>
                    </ContextMenu>
                </ListView.ContextMenu>
            </ListView>
        </Grid>

        <!--Middle Right-->
        <Grid Grid.Row="1" Grid.Column="1" Margin="16">
            <Grid.RowDefinitions>
                <RowDefinition Height=".75*"/>
                <RowDefinition Height=".25*"/>
            </Grid.RowDefinitions>
            
            <!-- Elements inside of ViewBox are dynamically sizable-->
            <Viewbox ClipToBounds="True" VerticalAlignment="Top">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="32"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="48"/>
                    </Grid.RowDefinitions>
                    <Label Content="Innen" FontWeight="Bold" HorizontalAlignment="Left" FontSize="12"/>
                    <Label Content="Vertikalschnitt" FontSize="12"/>
                    <Label Content="Außen" FontWeight="Bold" HorizontalAlignment="Right" FontSize="12"/>

                    <!-- "LayersCanvas" -->
                    <ItemsControl x:Name="layers_ItemsControl"
                                  Grid.Row="1"
                                  ItemsSource="{Binding LayerRects}"
                                  ItemsPanel="{StaticResource Canvas}"
                                  ItemContainerStyle="{StaticResource CanvasContainerStyle}"
                                  ItemTemplate="{StaticResource CanvasItemStyle}"/>

                    <Grid Grid.Row="2" x:Name="measurement_Grid" Width="{Binding ElementName=layers_ItemsControl, Path=Width}"/>
                </Grid>
            </Viewbox>

            <Border Grid.Row="1" CornerRadius="8" Background="White" BorderBrush="{StaticResource PrimaryBorderBrush}" BorderThickness="1" Margin="0,16,0,0">
                <!--
                Einstellungen wie:
                Ansicht drehen links, rechts usw.
                Ansicht spiegeln
                Gesamtwerte des Bauteils einblenden (dicke, R, U, sd etc.)-->
            </Border>
        </Grid>

        <!--Bottom-->
        <GridSplitter Grid.Column="1" Grid.RowSpan="2" HorizontalAlignment="Left" Margin="-4,16,0,16" VerticalAlignment="Stretch" Width="8" Background="Transparent"/>

    </Grid>

</UserControl>
