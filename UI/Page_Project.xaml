<UserControl x:Class="BauphysikToolWPF.UI.Page_Project"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:vm="clr-namespace:BauphysikToolWPF.UI.ViewModels"
             xmlns:controls="clr-namespace:BauphysikToolWPF.UI.CustomControls"
             mc:Ignorable="d" 
             d:DesignHeight="1200" d:DesignWidth="1200">

    <UserControl.DataContext>
        <!-- Sets the Data Reference (Source) for 'Binding' in this XAML -->
        <vm:Page_Project_VM/>
    </UserControl.DataContext>

    <UserControl.Resources>

        <controls:FileTypeToIconConverter x:Key="FileTypeToIconConverter"/>
        <controls:FilePathToFileNameConverter x:Key="FilePathToFileNameConverter"/>
        <controls:FilePathToIsFoundConverter x:Key="FilePathToIsFoundConverter"/>

        <!-- Custom ScrollViewer Style -->
        <Style x:Key="CustomScrollViewerStyle" TargetType="ScrollViewer">
            <Setter Property="Padding" Value="0"/>
            <Style.Triggers>
                <Trigger Property="ComputedVerticalScrollBarVisibility" Value="Visible">
                    <Setter Property="Padding" Value="0,0,16,0"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!--Custom RadioButton01_A: Exclusive Group, Checkstates etc.-->
        <Style x:Key="RadioButton01_A" TargetType="{x:Type RadioButton}">
            <!--Set default properties of the button-->
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="BorderBrush" Value="{StaticResource PrimaryBorderBrush}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="MinHeight" Value="40"/>
            <Setter Property="MinWidth" Value="56"/>
            <!--Set appearance of the element-->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <!--Element appearance with behaviour of a 'RadioButton'-->
                        <Border CornerRadius="16" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="4">
                            <StackPanel Orientation="Vertical">
                                <!--Bind Image via DataContext Property in the Button Element-->
                                <Image Source="{TemplateBinding Tag}" Stretch="Fill" Width="32" Height="32" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="8"/>
                                <Label Content="{TemplateBinding Content}"/>
                            </StackPanel>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <!--Set Triggers and Effects-->
            <Style.Triggers>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="BorderBrush" Value="{StaticResource PrimaryHighlightBrush}"/>
                    <Setter Property="Background" Value="{StaticResource PrimaryHoverBrush}"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource PrimaryHoverBrush}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- ListView Style -->
        <Style x:Key="ListViewStyleRecentProjects" TargetType="{x:Type ListView}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Margin" Value="0"/>
        </Style>

        <!-- ListViewItem Style -->
        <!--defines the styling of the ListViewItem itself (the container that holds the template).-->
        <Style x:Key="RecentProjectItemContainerStyle" TargetType="{x:Type ListViewItem}">
            <Setter Property="Margin" Value="0,0,0,8"/>
            <Setter Property="Padding" Value="12"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListViewItem">
                        <Border BorderThickness="{TemplateBinding BorderThickness}" 
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Background="{TemplateBinding Background}" 
                                CornerRadius="8"
                                Padding="{TemplateBinding Padding}">
                            <ContentPresenter/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource PrimaryHoverBrush}"/>
                </Trigger>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="{StaticResource PrimaryHoverBrush}"/>
                    <Setter Property="BorderBrush" Value="{StaticResource PrimaryHighlightBrush}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- ItemTemplate for ListView -->
        <!-- Defines the content layout inside each item: Does NOT affect the container (ListViewItem) itself.-->
        <DataTemplate x:Key="RecentProjectsItemTemplate">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <StackPanel Grid.Column="0" Orientation="Vertical">
                    <TextBlock Text="{Binding FileName}" FontWeight="Bold"/>
                    <TextBlock Text="{Binding FilePath}" FontSize="12" Foreground="Gray"/>
                </StackPanel>
                <TextBlock Grid.Column="1" Text="{Binding LastOpenedString}" FontSize="12" Foreground="Gray" HorizontalAlignment="Right"/>
            </Grid>
        </DataTemplate>


    </UserControl.Resources>

    <Grid Background="{StaticResource PrimaryLightBrush}">
        <Grid.RowDefinitions>
            <RowDefinition Height="40" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width=".2*" MinWidth="248" MaxWidth="320"/>
            <ColumnDefinition Width=".6*" MinWidth="448"/>
            <ColumnDefinition Width=".2*" MinWidth="248" MaxWidth="480"/>
        </Grid.ColumnDefinitions>

        <!--Top -->
        <Border Grid.ColumnSpan="3" Background="{StaticResource PrimaryMediumBrush}">
            <Label Content="Projektdaten" FontSize="18" FontWeight="Bold" FontStretch="Expanded" HorizontalAlignment="Center"/>
        </Border>

        <!-- Left -->
        <StackPanel Grid.Row="1" Grid.Column="0" Orientation="Vertical" VerticalAlignment="Top" Margin="16">
            <Button Content="Neues Projekt"  Style="{StaticResource ButtonStyle01_Highlighted}" Tag="{StaticResource ButtonIcon_NewProject_Flat}" Margin="0,0,0,16" Command="{Binding NewCommand}"/>
            <Button Content="Speichern" Style="{StaticResource ButtonStyle01}" Tag="{StaticResource ButtonIcon_Save_Flat}" Margin="0,0,0,16" Command="{Binding SaveCommand}" Visibility="{Binding ProjectDataVisibility}"/>
            <Button Content="Speichern unter" Style="{StaticResource ButtonStyle01}" Tag="{StaticResource ButtonIcon_SaveTo_Flat}" Margin="0,0,0,16" Command="{Binding SaveToCommand}" Visibility="{Binding ProjectDataVisibility}"/>
            <Button Content="Öffnen" Style="{StaticResource ButtonStyle01}" Tag="{StaticResource ButtonIcon_OpenFile_Flat}" Margin="0,0,0,16" Command="{Binding OpenCommand}"/>
        </StackPanel>

        <!-- Middle 1/2 -->
        <ScrollViewer Grid.Row="1" Grid.Column="1" Style="{StaticResource CustomScrollViewerStyle}" Margin="16" VerticalScrollBarVisibility="Auto" Visibility="{Binding ProjectDataVisibility}">
            <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width=".5*" MinWidth="64"/>
                    <ColumnDefinition Width=".5*" MinWidth="64"/>
                </Grid.ColumnDefinitions>

                <Label Grid.ColumnSpan="2" Content="Projektname:" HorizontalAlignment="Left"/>
                <TextBox Grid.Row="1" Grid.ColumnSpan="2" Grid.Column="0" Text="{Binding ProjectName}" HorizontalContentAlignment="Left" FontSize="14" Height="32" Margin="0,4,0,0"/>

                <Label Grid.Row="2" Grid.ColumnSpan="2" Grid.Column="0" Content="Bearbeiter:" HorizontalAlignment="Left" Margin="0,8,0,0"/>
                <TextBox Grid.Row="3" Grid.ColumnSpan="2" Grid.Column="0" Text="{Binding AuthorName}" HorizontalContentAlignment="Left" FontSize="14" Height="32" Margin="0,4,0,0"/>

                <Label Grid.Row="4" Grid.ColumnSpan="2" Grid.Column="0" Content="Nutzungsart des Gebäudes:" HorizontalAlignment="Left" Margin="0,8,0,0"/>
                <RadioButton Grid.Row="5" Grid.Column="0" IsChecked="{Binding IsResidentialUsageChecked}" GroupName="BuildingUsage" Content="Wohngebäude" Style="{StaticResource RadioButton01_A}" Tag="{StaticResource ButtonIcon_House_B}" Margin="0,4,4,0"/>
                <RadioButton Grid.Row="5" Grid.Column="1" IsChecked="{Binding IsNonResidentialUsageChecked}" GroupName="BuildingUsage" Content="Nichtwohngebäude" Style="{StaticResource RadioButton01_A}" Tag="{StaticResource ButtonIcon_Office_B}" Margin="4,4,0,0"/>

                <Label Grid.Row="6" Grid.ColumnSpan="2" Grid.Column="0" Content="Alter des Gebäudes:" HorizontalAlignment="Left" Margin="0,8,0,0"/>
                <RadioButton Grid.Row="7" Grid.Column="0" IsChecked="{Binding IsNewConstrChecked}" GroupName="BuildingAge" Content="Neubau" Style="{StaticResource RadioButton01_A}" Tag="{StaticResource ButtonIcon_New_B}" Margin="0,4,4,0"/>
                <RadioButton Grid.Row="7" Grid.Column="1" IsChecked="{Binding IsExistingConstrChecked}" GroupName="BuildingAge" Content="Bestandsgebäude" Style="{StaticResource RadioButton01_A}" Tag="{StaticResource ButtonIcon_ExistingHouse_B}" Margin="4,4,0,0"/>

                <Label Grid.Row="8" Grid.ColumnSpan="2" Grid.Column="0" Content="Kommentar" HorizontalAlignment="Left" Margin="0,8,0,0"/>
                <TextBox Grid.Row="9" Grid.ColumnSpan="2" Grid.Column="0" TextAlignment="Left" Text="{Binding Comment}" Background="{StaticResource SecondaryLightBlueBrush}" VerticalContentAlignment="Top" TextWrapping="Wrap" MinHeight="80" FontSize="14" FontFamily="Consolas" MaxLength="800" Margin="0,4,0,0"/>

                <Label Grid.Row="10" Grid.Column="0" Content="Dateien mit diesem Projekt verknüpfen" HorizontalAlignment="Left" Margin="0,16,0,0"/>

                <!--Expose the FilePaths Property to a ViewModel property for monitoring and event handling-->
                <controls:FileDropArea x:Name="FileDropArea" Grid.Row="11" Grid.Column="0" Grid.ColumnSpan="2" FilePaths="{Binding DroppedFilePaths, NotifyOnSourceUpdated=True}" SourceUpdated="FileDropArea_OnSourceUpdated" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" MinHeight="160" Margin="0,8" />

                <!--OneWay Binding: source control (FileDropArea) updates the target control (ListBox)-->
                <ListBox Grid.Row="12"
                    Grid.Column="0"
                    Grid.ColumnSpan="2"
                    ItemsSource="{Binding ElementName=FileDropArea, Path=FilePaths, Mode=OneWay}"
                    Margin="8,8,0,0" 
                    VerticalAlignment="Stretch"
                    HorizontalAlignment="Center"
                    Background="Transparent"
                    MinHeight="100"
                    MinWidth="100">
                    <ListBox.Resources>
                        <!-- Style for ListBox -->
                        <Style TargetType="ListBox">
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="BorderThickness" Value="0"/>
                        </Style>

                        <!-- ItemContainerStyle for ListBox -->
                        <Style TargetType="ListBoxItem">
                            <Setter Property="Padding" Value="4"/>
                            <Setter Property="Margin" Value="0,0,0,8"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="ListBoxItem">
                                        <Border Name="LbiBorder" HorizontalAlignment="Stretch" CornerRadius="8" BorderThickness="0" Background="{StaticResource PrimaryMediumBrush}">
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto"/>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition Width="Auto"/>
                                                    <ColumnDefinition Width="Auto"/>
                                                </Grid.ColumnDefinitions>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="Auto"/>
                                                </Grid.RowDefinitions>

                                                <Image Name="FileTypeImage" Grid.Row="0" Grid.RowSpan="2" Grid.Column="0" Width="32" Height="32" Source="{Binding Converter={StaticResource FileTypeToIconConverter}}" Margin="8"/>
                                                <TextBlock Grid.Row="0" Grid.Column="1" FontWeight="DemiBold" FontSize="14" Text="{Binding Converter={StaticResource FilePathToFileNameConverter}}" VerticalAlignment="Bottom" HorizontalAlignment="Stretch" Margin="8,0,32,0"/>
                                                <Button Name="OpenLinkedFileButton" Grid.Row="0" Grid.RowSpan="2" Grid.Column="2" ToolTip="Verknüpfte Datei öffnen" Content="Öffnen" HorizontalAlignment="Right" Style="{StaticResource ButtonStyle02_Highlighted}" Command="{Binding DataContext.OpenLinkedFileCommand, RelativeSource={RelativeSource AncestorType=UserControl}}" CommandParameter="{Binding}"/>
                                                <Button Grid.Row="0" Grid.RowSpan="2" Grid.Column="3" ToolTip="Verknüpfte Datei aus Liste entfernen" HorizontalAlignment="Right" Style="{StaticResource ButtonStyle01_Mini}" Tag="{StaticResource ButtonIcon_Delete_B}" Command="{Binding DataContext.DeleteLinkedFileCommand, RelativeSource={RelativeSource AncestorType=UserControl}}" CommandParameter="{Binding}" Margin="8"/>
                                                <TextBlock Grid.Row="1" Grid.Column="1" Text="{Binding}" VerticalAlignment="Top" FontSize="11" HorizontalAlignment="Left" Margin="8,0,32,0"/>
                                            </Grid>
                                        </Border>
                                        
                                        <ControlTemplate.Triggers>
                                            <DataTrigger Binding="{Binding Converter={StaticResource FilePathToIsFoundConverter}}" Value="False">
                                                <Setter TargetName="OpenLinkedFileButton" Property="IsEnabled" Value="False"/>
                                                <Setter TargetName="OpenLinkedFileButton" Property="Content" Value="Datei nicht gefunden"/>
                                                <Setter TargetName="LbiBorder" Property="Background" Value="{StaticResource SecondaryLightRedBrush}"/>
                                            </DataTrigger>
                                        </ControlTemplate.Triggers>
                            
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ListBox.Resources>
                </ListBox>

            </Grid>
        </ScrollViewer>

        <!-- Middle 2/2  -->
        <Grid Grid.Row="1" Grid.Column="1" Margin="16" Visibility="{Binding RecentProjectsListVisibility}">
            <Grid.RowDefinitions>
                <RowDefinition Height="48"/>
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <Label Grid.Row="0" Content="Zuletzt geöffnete Projekte" HorizontalAlignment="Left" VerticalAlignment="Top" FontWeight="Bold"/>

            <ListView Grid.Row="1" ItemsSource="{Binding RecentProjects}" 
                      SelectedItem="{Binding SelectedListViewItem, Mode=TwoWay}"
                      ItemTemplate="{StaticResource RecentProjectsItemTemplate}"
                      ItemContainerStyle="{StaticResource RecentProjectItemContainerStyle}"
                      Style="{StaticResource ListViewStyleRecentProjects}">
                    <!-- EventToCommand behavior to bind the double-click event to the command-->
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseDoubleClick">
                            <i:InvokeCommandAction Command="{Binding RecentProjectDoubleClickCommand}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
            </ListView>
        </Grid>

        <!-- Right -->
        <Grid Grid.Row="1" Grid.Column="2" Margin="16">
            <Grid.RowDefinitions>
                <RowDefinition Height="48"/>
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <Button Grid.Row="2" VerticalAlignment="Bottom" Content="Weiter" Command="{Binding NextCommand}" Style="{StaticResource ButtonStyle01_Highlighted}" Tag="{StaticResource ButtonIcon_Next_W}" IsEnabled="{Binding ElementPageAvailable}"/>

        </Grid>

        <GridSplitter Grid.Column="2" Grid.Row="0" Grid.RowSpan="2" HorizontalAlignment="Left" Margin="-4,16,0,16" VerticalAlignment="Stretch" Width="8" Background="Transparent"/>

    </Grid>
</UserControl>
