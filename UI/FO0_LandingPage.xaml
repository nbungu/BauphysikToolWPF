<UserControl x:Class="BauphysikToolWPF.UI.FO0_LandingPage"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:BauphysikToolWPF"
             xmlns:controls="clr-namespace:BauphysikToolWPF.UI.CustomControls"
             xmlns:vm="clr-namespace:BauphysikToolWPF.UI.ViewModels"
             mc:Ignorable="d" 
             d:DesignHeight="700" d:DesignWidth="1200">

    <UserControl.DataContext>
        <!-- Sets the Data Reference (Source) for 'Binding' in this XAML -->
        <vm:FO0_LandingPage_VM/> 
    </UserControl.DataContext>

    <UserControl.Resources>

        <!-- Checks if Element of WrapPanel is currently SelectedElement -->
        <controls:IsSelectedElementConverter x:Key="IsSelectedElementConverter"/>

        <!--Custom ButtonGridPanel: light rounded corners, click effects-->
        <Style x:Key="ButtonStyleGridPanel" TargetType="{x:Type Button}">
            <Setter Property="Content" Value="{Binding ElementId}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="BorderBrush" Value="{StaticResource PrimaryHighlightBrush}"/>
            <Setter Property="Background" Value="{StaticResource PrimaryMediumBrush}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <!--Element appearance with behaviour of a 'Button'-->
                        <Border x:Name="btn_border" CornerRadius="16" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <Grid Margin="8">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height=".2*"/>
                                    <RowDefinition Height=".8*"/>
                                </Grid.RowDefinitions>
                                <Label Grid.Row="0" Content="{TemplateBinding Content}" ContentStringFormat='ID: {0}' HorizontalAlignment="Right" Foreground="White" FontSize="10"/>
                                <Image Grid.Row="1" ClipToBounds="True" SnapsToDevicePixels="True" Source="{Binding ElementImage}" Margin="8"/>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>            
            <Setter Property="RenderTransform">
                <Setter.Value>
                    <ScaleTransform ScaleX="1" ScaleY="1" />
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <!--Here: Binding (DataContext) is typeof 'Element' set by ItemsSource Property-->
                <DataTrigger Binding="{Binding ElementId, Converter={StaticResource IsSelectedElementConverter}}" Value="True">
                    <Setter Property="BorderThickness" Value="2"/>
                </DataTrigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="RenderTransform">
                        <Setter.Value>
                            <ScaleTransform ScaleX=".96" ScaleY=".96" />
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource PrimaryHoverBrush}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!--Here: Binding (DataContext) is typeof 'Element' set by ItemsSource Property-->
        <DataTemplate x:Key="WrapPanelItem_DesignTemplate">
            <Grid Margin="8">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <!--
                'SelectElementCommand' is not in DataContext of this UIElement (Binding here is typeof 'Element' from ItemsSource Property).
                Switch to correct DataContext. Using the 'Tag' Property as holder of our other DataContext. Tag is set by the ItemsControl.
                -->
                <Button Grid.Row="0"
                        Content="{Binding ElementId}"
                        Command="{Binding RelativeSource={RelativeSource Self}, Path=Tag.SelectElementCommand}"
                        CommandParameter="{Binding ElementId}"
                        Style="{StaticResource ButtonStyleGridPanel}"
                        Tag="{Binding Path=Tag, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}">
                    <Button.ContextMenu>
                        <!--
                        ContextMenu isn't a part of the visual tree of this page -> DataContext is not available.
                        You need to pass the data context in a different way, using PlacementTarget and the Tag property to expose the DataBinding (FO0_LandingPage_VM).
                        The Tag Property can be used to hold any kind of user specified Data.
                        -->
                        <ContextMenu x:Name="WrapPanel_ContextMenu">
                            <MenuItem Header="Bearbeiten" Command="{Binding Path=PlacementTarget.Tag.OpenNewElementWindowCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}" CommandParameter="{Binding Path=PlacementTarget.Content, RelativeSource={RelativeSource AncestorType=ContextMenu}}">
                                <MenuItem.Icon>
                                    <Image Source="{StaticResource ButtonIcon_Edit_B}" />
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem Header="Löschen" Command="{Binding Path=PlacementTarget.Tag.DeleteElementCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}" CommandParameter="{Binding Path=PlacementTarget.Content, RelativeSource={RelativeSource AncestorType=ContextMenu}}">
                                <MenuItem.Icon>
                                    <Image Source="{StaticResource ButtonIcon_Delete_B}" />
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem Header="Speichern">
                                <MenuItem.Icon>
                                    <Image Source="{StaticResource ButtonIcon_Save_B}"/>
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem Header="Sperren">
                                <MenuItem.Icon>
                                    <Image Source="{StaticResource ButtonIcon_Lock_B}"/>
                                </MenuItem.Icon>
                            </MenuItem>
                        </ContextMenu>
                    </Button.ContextMenu>
                </Button>
                <Label Grid.Row="1" Content="{Binding Name}" Margin="0,4,0,0"/>
            </Grid>
        </DataTemplate>

        <ItemsPanelTemplate x:Key="WrapPanel_Template">
            <WrapPanel x:Name="element_WrapPanel" ItemWidth="144" ItemHeight="192" ClipToBounds="True"/>
        </ItemsPanelTemplate>

    </UserControl.Resources>

    <Grid Background="{StaticResource PrimaryLightBrush}">
        <Grid.RowDefinitions>
            <RowDefinition Height="56" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width=".2*" MinWidth="170" MaxWidth="290"/>
            <ColumnDefinition Width=".8*" MinWidth="320"/>
        </Grid.ColumnDefinitions>

        <!--Top Left -->
        <Border Grid.ColumnSpan="2" Margin="16,16,16,0" CornerRadius="8" Background="{StaticResource PrimaryMediumBrush}">
            <Grid>
                <Label Content="Bauteilkatalog" FontSize="18" FontWeight="Bold" FontStretch="Expanded" HorizontalAlignment="Center"/>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                    <Label Content="Weiter"/>
                    <Button Style="{StaticResource ButtonStyle03_Mini}" Command="{Binding SwitchPageCommand}" CommandParameter="{x:Static local:NavigationContent.SetupLayer}" Tag="{StaticResource ButtonIcon_Next_B}" Margin="4" ToolTip="Weiter zu: Umgebungsbedingungen"/>
                </StackPanel>
            </Grid>
        </Border>

        <!--
        <Rectangle Grid.ColumnSpan="2" Fill="{StaticResource PrimaryDarkBrush}"/>
        <Label Grid.ColumnSpan="2" Content="Bauteilkatalog" FontSize="24" FontWeight="Bold" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" Foreground="White"/>
        <Image Grid.Column="1" Grid.RowSpan="2" Width="80" Height="80" Source="../Ordner_Icon.ico" Margin="16" HorizontalAlignment="Right" VerticalAlignment="Top"/>
        -->

        <StackPanel Grid.Row="1" Grid.Column="0" Orientation="Vertical" Margin="16">
            <Button Content="Bauteil erstellen" Command="{Binding OpenNewElementWindowCommand}" Style="{StaticResource ButtonStyle03_A}" Tag="{StaticResource ButtonIcon_AddElement_W}" Margin="0,0,0,16"/>
            <Button Content="Bauteilbibliothek" Style="{StaticResource ButtonStyle03_B}" Tag="{StaticResource ButtonIcon_Projects_B}"  Margin="0,0,0,16"/>
            <Button Content="Importieren" Style="{StaticResource ButtonStyle03_B}" Tag="{StaticResource ButtonIcon_Download_B}"  Margin="0,0,0,16"/>
            <Line X2="300" Stroke="Gray" HorizontalAlignment="Center"/>
        </StackPanel>

        <Grid Grid.Row="1" Grid.Column="1" Margin="16">
            <Grid.RowDefinitions>
                <RowDefinition Height="48" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width=".15*"/>
                <ColumnDefinition Width=".7*"/>
                <ColumnDefinition Width=".15*"/>
            </Grid.ColumnDefinitions>

            <Label Grid.Row="0" Grid.Column="1" Content="Zuletzt erstellte Bauteile" HorizontalAlignment="Left" FontWeight="Bold"/>

            <!--"WrapPanel inside a ListBox does pick up the DataTemplate you define .. so you have complete liberty to bind any list to your WrapPanel"-->
            <ItemsControl x:Name="element_ItemsControl"
                          Grid.Row="1"
                          Grid.Column="1"
                          ItemsSource="{Binding Elements}"
                          ItemsPanel="{StaticResource WrapPanel_Template}"
                          ItemTemplate="{StaticResource WrapPanelItem_DesignTemplate}"
                          Background="Transparent"                          
                          BorderThickness="0"
                          Tag="{Binding}"/>
        </Grid>
    </Grid>
</UserControl>
