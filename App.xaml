<Application x:Class="BauphysikToolWPF.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:BauphysikToolWPF"
             xmlns:ui="clr-namespace:BauphysikToolWPF.UI"
             xmlns:controls="clr-namespace:BauphysikToolWPF.UI.CustomControls"
             xmlns:system="clr-namespace:System;assembly=System.Runtime"
             StartupUri="MainWindow.xaml">
    
    <!--Sets Resources available for entire Application-->
    <Application.Resources>

        <SolidColorBrush x:Key="PrimaryDarkBrush" Color="LightSlateGray"/>
        <SolidColorBrush x:Key="PrimaryMediumBrush" Color="LightGray"/>
        <SolidColorBrush x:Key="PrimaryLightBrush" Color="#EDEDED"/>
        <SolidColorBrush x:Key="PrimaryHighlightBrush" Color="#1473e6"/>
        <SolidColorBrush x:Key="PrimaryBorderBrush" Color="#FFABADB3"/>

        <!--Custom TextBox for Subscript Text with Equation-->
        <Style TargetType="{x:Type controls:MathTextBox}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type controls:MathTextBox}">
                        <StackPanel Orientation="Horizontal">
                            <TextBlock FontSize="{TemplateBinding FontSize}" Text="{TemplateBinding BaseText}" VerticalAlignment="Center"/>
                            <TextBlock FontSize="{TemplateBinding FontSize}" Margin="-3,1,0,0" VerticalAlignment="Center">
                                <Run Text=""/>
                                <Run BaselineAlignment="Subscript" Text="{TemplateBinding SubscriptText}" FontSize="{TemplateBinding SubscriptFontSize}"/>
                            </TextBlock>
                            <TextBlock x:Name="equals" FontSize="{TemplateBinding FontSize}" Text=" = " VerticalAlignment="Center"/>
                            <TextBlock FontSize="{TemplateBinding FontSize}" Text="{TemplateBinding Value}" VerticalAlignment="Center"/>

                            <TextBlock x:Name="placeholder" FontSize="{TemplateBinding FontSize}" Text=" " VerticalAlignment="Center"/>
                            <TextBlock FontSize="{TemplateBinding FontSize}" Text="{TemplateBinding Unit}" VerticalAlignment="Center"/>
                        </StackPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--Custom Label for Subscript Text-->
        <Style TargetType="{x:Type controls:SubscriptLabel}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type controls:SubscriptLabel}">
                        <StackPanel Orientation="Horizontal">
                            <TextBlock FontSize="{TemplateBinding FontSize}" Text="{TemplateBinding PrependText}" VerticalAlignment="Center"/>
                            <TextBlock FontSize="{TemplateBinding FontSize}" Text="{TemplateBinding BaseText}" VerticalAlignment="Center"/>
                            <TextBlock FontSize="{TemplateBinding FontSize}" Margin="-3,1,0,0" VerticalAlignment="Center">
                                <Run Text=""/>
                                <Run BaselineAlignment="Subscript" Text="{TemplateBinding SubscriptText}" FontSize="{TemplateBinding SubscriptFontSize}"/>
                            </TextBlock>
                            <TextBlock FontSize="{TemplateBinding FontSize}" Text="{TemplateBinding AppendText}" VerticalAlignment="Center"/>
                        </StackPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--Custom Button01: Test-->
        <Style x:Key="ButtonStyle01" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="{StaticResource PrimaryHighlightBrush}"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid x:Name="grid">
                            <Border x:Name="border" CornerRadius="8" BorderBrush="Black" BorderThickness="2">
                                <Border.Background>
                                    <RadialGradientBrush GradientOrigin="0.496,1.052">
                                        <RadialGradientBrush.RelativeTransform>
                                            <TransformGroup>
                                                <ScaleTransform CenterX="0.5" CenterY="0.5" 
                                                        ScaleX="1.5" ScaleY="1.5"/>
                                                <TranslateTransform X="0.02" Y="0.3"/>
                                            </TransformGroup>
                                        </RadialGradientBrush.RelativeTransform>
                                        <GradientStop Offset="1" Color="#00000000"/>
                                        <GradientStop Offset="0.3" Color="#FFFFFFFF"/>
                                    </RadialGradientBrush>
                                </Border.Background>
                                <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          TextElement.FontWeight="Bold">
                                </ContentPresenter>
                            </Border>

                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" TargetName="border">
                                    <Setter.Value>
                                        <RadialGradientBrush GradientOrigin="0.496,1.052">
                                            <RadialGradientBrush.RelativeTransform>
                                                <TransformGroup>
                                                    <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="1.5" ScaleY="1.5"/>
                                                    <TranslateTransform X="0.02" Y="0.3"/>
                                                </TransformGroup>
                                            </RadialGradientBrush.RelativeTransform>
                                            <GradientStop Color="#00000000" Offset="1"/>
                                            <GradientStop Color="#FF303030" Offset="0.3"/>
                                        </RadialGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" TargetName="border" Value="#FF33962B"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" TargetName="grid" Value="0.25"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--Custom Button02: rounded corners, highlighted blue, click effects-->
        <Style x:Key="ButtonStyle02_A" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="{StaticResource PrimaryHighlightBrush}"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Height" Value="32"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="RenderTransform">
                <Setter.Value>
                    <ScaleTransform ScaleX="1" ScaleY="1" />
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="RenderTransform">
                        <Setter.Value>
                            <ScaleTransform ScaleX=".96" ScaleY=".96" />
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
            <Style.Resources>
                <Style TargetType="Border">
                    <Setter Property="CornerRadius" Value="16"/>
                </Style>
            </Style.Resources>
        </Style>

        <!--Custom Button02: rounded corners, click effects-->
        <Style x:Key="ButtonStyle02_B" TargetType="{x:Type Button}">
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Background" Value="{StaticResource PrimaryMediumBrush}"/>
            <Setter Property="Height" Value="32"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="RenderTransform">
                <Setter.Value>
                    <ScaleTransform ScaleX="1" ScaleY="1" />
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="RenderTransform">
                        <Setter.Value>
                            <ScaleTransform ScaleX=".96" ScaleY=".96" />
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
            <Style.Resources>
                <Style TargetType="Border">
                    <Setter Property="CornerRadius" Value="16"/>
                </Style>
            </Style.Resources>
            
        </Style>

        <!--Custom Button03: rectangular, click effects -->
        <Style x:Key="ButtonStyle03" TargetType="{x:Type Button}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
            <Setter Property="RenderTransform">
                <Setter.Value>
                    <ScaleTransform ScaleX="1" ScaleY="1" />
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="RenderTransform">
                        <Setter.Value>
                            <ScaleTransform ScaleX=".96" ScaleY=".96" />
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!--ListBox appearance: Used in MainWindow.xaml ListBox as Style -->
        <Style x:Key="NavigationListBoxStyle" TargetType="{x:Type ListBox}">
            <Setter Property="Background" Value="{StaticResource PrimaryDarkBrush}"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Visibility" Value="Visible"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="SelectedIndex" Value="0"/>
            <Setter Property="Width" Value="Auto"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBox}">
                        <Border Background="{TemplateBinding Background}" BorderThickness="0" Padding="0" SnapsToDevicePixels="true">
                            <ScrollViewer Padding="{TemplateBinding Padding}" Focusable="false">
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </ScrollViewer>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <!--Don't show ListBox when on the LandingPage -->
            <Style.Triggers>
                <DataTrigger Binding="{Binding ElementName=NavigationMenuListBox, Path=SelectedItem}" Value="LandingPage">
                    <Setter Property="Visibility" Value="Collapsed"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <!--ListBox entry appearance and behaviour: Used in MainWindow.xaml ListBox as ItemContainerStyle -->
        <Style x:Key="NavigationListBoxItemStyle" TargetType="{x:Type ListBoxItem}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{StaticResource PrimaryLightBrush}"/>
            <Setter Property="Margin" Value="-1"/>
            <Setter Property="ToolTip" Value="{Binding}"/>
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Border x:Name="Bd"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{TemplateBinding Background}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter TargetName="Bd" Property="Background" Value="{StaticResource PrimaryLightBrush}"/>
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="true"/>
                                    <Condition Property="Selector.IsSelectionActive" Value="false"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource PrimaryLightBrush}"/>
                                <Setter Property="Foreground" Value="White"/>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--ListBox entry content: Used in MainWindow.xaml ListBox as ItemTemplate -->
        <DataTemplate x:Key="NavigationDataTemplate">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="56"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <Image x:Name="MenuItemIcon" Grid.Column="0" Source="Resources/Icons/GL_019x80_home.png" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="8"/>
                <Label x:Name="MenuItemLabel" Grid.Column="1" VerticalAlignment="Center" HorizontalContentAlignment="Center" FontSize="14" Margin="0,8,8,8"/>
            </Grid>
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding}" Value="LandingPage">
                    <Setter TargetName="MenuItemIcon" Property="Source" Value="Resources/Icons/GL_019x80_home.png"/>
                    <Setter TargetName="MenuItemLabel" Property="Content" Value="Menü"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding}" Value="Setup">
                    <Setter TargetName="MenuItemIcon" Property="Source" Value="Resources/Icons/GL_015x80_edit.png"/>
                    <Setter TargetName="MenuItemLabel" Property="Content" Value="Editor"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding}" Value="Temperature">
                    <Setter TargetName="MenuItemIcon" Property="Source" Value="Resources/Icons/CL_001x80_climate_menu.png"/>
                    <Setter TargetName="MenuItemLabel" Property="Content" Value="Temperaturverlauf"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding}" Value="Moisture">
                    <Setter TargetName="MenuItemIcon" Property="Source" Value="Resources/Icons/CL_025x80_air_quality_inside_air.png"/>
                    <Setter TargetName="MenuItemLabel" Property="Content" Value="Glaser-Diagramm"/>
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>

        <!--ListBox items: Used in MainWindow.xaml ListBox as ItemsSource-->
        <x:Array x:Key="NavigationMenuItems" Type="system:String">
            <system:String>LandingPage</system:String>
            <system:String>Setup</system:String>
            <system:String>Temperature</system:String>
            <system:String>Moisture</system:String>
        </x:Array>

        <!--The actual content pages: Used in MainWindow.xaml ContentControl to set the current page-->
        <DataTemplate x:Key="FO0_LandingPage">
            <ui:FO0_LandingPage/>
        </DataTemplate>
        <DataTemplate x:Key="FO1_Setup">
            <ui:FO1_Setup/>
        </DataTemplate>
        <DataTemplate x:Key="FO2_Temperature">
            <ui:FO2_Temperature/>
        </DataTemplate>
        <DataTemplate x:Key="FO3_Moisture">
            <ui:FO3_Moisture/>
        </DataTemplate>

    </Application.Resources>
</Application>
