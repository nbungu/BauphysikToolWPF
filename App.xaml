<Application x:Class="BauphysikToolWPF.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:BauphysikToolWPF"
             xmlns:ui="clr-namespace:BauphysikToolWPF.UI"
             xmlns:controls="clr-namespace:BauphysikToolWPF.UI.CustomControls"
             xmlns:system="clr-namespace:System;assembly=System.Runtime"
             StartupUri="MainWindow.xaml">
    
    <!--Sets Resources available for entire Application-->
    <Application.Resources>

        <!--Application Color Palette-->
        <SolidColorBrush x:Key="PrimaryDarkBrush" Color="LightSlateGray"/>
        <SolidColorBrush x:Key="PrimaryMediumBrush" Color="LightGray"/>
        <SolidColorBrush x:Key="PrimaryLightBrush" Color="#EDEDED"/>
        <SolidColorBrush x:Key="PrimaryHighlightBrush" Color="#1473e6"/>
        <SolidColorBrush x:Key="PrimaryBorderBrush" Color="#FFABADB3"/>
        <SolidColorBrush x:Key="PrimaryHoverBrush" Color="#BEE6FD"/>

        <!--Button Icons source paths-->
        <BitmapImage x:Key="ButtonIcon_Add_B" UriSource="/Resources/Icons/GL_010x80_create_b.png"/>
        <BitmapImage x:Key="ButtonIcon_Add_W" UriSource="/Resources/Icons/GL_010x80_create_w.png"/>
        <BitmapImage x:Key="ButtonIcon_Delete" UriSource="/Resources/Icons/GL_011x80_delete.png"/>
        <BitmapImage x:Key="ButtonIcon_Edit" UriSource="/Resources/Icons/GL_015x80_edit.png"/>
        <BitmapImage x:Key="ButtonIcon_Cancel" UriSource="/Resources/Icons/GL_005x80_cancel.png"/>
        <BitmapImage x:Key="ButtonIcon_OK" UriSource="/Resources/Icons/GL_009x80_confirm.png"/>
        <BitmapImage x:Key="ButtonIcon_OK_green" UriSource="/Resources/Icons/GL_009x80_confirm_g.png"/>

        <!--Custom TextBox for Subscript Text with Equation-->
        <Style TargetType="{x:Type controls:EquationLabel}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type controls:EquationLabel}">
                        <StackPanel Orientation="Horizontal">
                            <TextBlock FontSize="{TemplateBinding FontSize}" Text="{TemplateBinding BaseText}" VerticalAlignment="Center"/>
                            <TextBlock FontSize="{TemplateBinding FontSize}" Margin="-3,1,0,0" VerticalAlignment="Center">
                                <Run Text=""/>
                                <Run BaselineAlignment="Subscript" Text="{TemplateBinding SubscriptText}" FontSize="{TemplateBinding SubscriptFontSize}"/>
                            </TextBlock>
                            <TextBlock x:Name="equals" FontSize="{TemplateBinding FontSize}" Text=" = " VerticalAlignment="Center"/>
                            <TextBlock FontSize="{TemplateBinding FontSize}" Text="{TemplateBinding Value}" VerticalAlignment="Center"/>

                            <TextBlock x:Name="placeholder" FontSize="{TemplateBinding FontSize}" Text=" " VerticalAlignment="Center"/>
                            <TextBlock FontSize="{TemplateBinding FontSize}" Text="{TemplateBinding Unit}" VerticalAlignment="Center"/>
                        </StackPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--Custom Label for Subscript Text-->
        <Style TargetType="{x:Type controls:SubscriptLabel}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type controls:SubscriptLabel}">
                        <StackPanel Orientation="Horizontal">
                            <TextBlock FontSize="{TemplateBinding FontSize}" Text="{TemplateBinding PrependText}" VerticalAlignment="Center"/>
                            <TextBlock FontSize="{TemplateBinding FontSize}" Text="{TemplateBinding BaseText}" VerticalAlignment="Center"/>
                            <TextBlock FontSize="{TemplateBinding FontSize}" Margin="-3,1,0,0" VerticalAlignment="Center">
                                <Run Text=""/>
                                <Run BaselineAlignment="Subscript" Text="{TemplateBinding SubscriptText}" FontSize="{TemplateBinding SubscriptFontSize}"/>
                            </TextBlock>
                            <TextBlock FontSize="{TemplateBinding FontSize}" Text="{TemplateBinding AppendText}" VerticalAlignment="Center"/>
                        </StackPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--Custom TextBox for fractions-->
        <Style TargetType="{x:Type controls:FractionLabel}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type controls:FractionLabel}">
                        <StackPanel Orientation="Vertical">
                            <TextBlock Height="18" FontSize="{TemplateBinding FontSize}" Text="{TemplateBinding CounterText}" VerticalAlignment="Bottom" HorizontalAlignment="Center" Margin="0,0,0,1"/>
                            <Line X2="30" StrokeThickness="1" Stroke="Black" VerticalAlignment="Center"/>
                            <TextBlock Height="18" FontSize="{TemplateBinding FontSize}" Text="{TemplateBinding DenominatorText}" VerticalAlignment="Top" HorizontalAlignment="Center" Margin="0,-2,0,0"/>
                        </StackPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
            
        <!--Custom ContextMenu Style: Used in ContextMenu as 'Style'-->
        <Style x:Key="ContextMenuStyle01" TargetType="{x:Type ContextMenu}">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="Background" Value="{StaticResource PrimaryLightBrush}"/>
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="Grid.IsSharedSizeScope" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Border BorderBrush="{StaticResource PrimaryBorderBrush}" Background="{TemplateBinding Background}" Padding="4" CornerRadius="8" BorderThickness="1">
                            <!--Force MenuItems to set the size of parent. If omitted, ContextMenu has size 0x0-->
                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--ContextMenu entry (MenuItem) appearance and behaviour: Used in ContextMenu as 'ItemContainerStyle' -->
        <Style x:Key="ContextMenuItemStyle01" TargetType="{x:Type MenuItem}">
            <Setter Property="Padding" Value="4"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="MinHeight" Value="32"/>
            <Setter Property="MinWidth" Value="160"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type MenuItem}">
                        <Border x:Name="menuItem_Border"
                            CornerRadius="4"
                            Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="true">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <ContentPresenter Content="{TemplateBinding Icon}" MaxHeight="{TemplateBinding MinHeight}" MaxWidth="{TemplateBinding MinHeight}"/>
                                <TextBlock Grid.Column="1" Text="{TemplateBinding Header}" VerticalAlignment="Center" Margin="4,0,0,0"/>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="RenderTransform">
                <Setter.Value>
                    <ScaleTransform ScaleX="1" ScaleY="1" />
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="RenderTransform">
                        <Setter.Value>
                            <ScaleTransform ScaleX=".96" ScaleY=".96" />
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource PrimaryHoverBrush}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        

        <!--Custom Button01: Test-->
        <Style x:Key="ButtonStyle01" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="{StaticResource PrimaryHighlightBrush}"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid x:Name="grid">
                            <Border x:Name="border" CornerRadius="8" BorderBrush="Black" BorderThickness="2">
                                <Border.Background>
                                    <RadialGradientBrush GradientOrigin="0.496,1.052">
                                        <RadialGradientBrush.RelativeTransform>
                                            <TransformGroup>
                                                <ScaleTransform CenterX="0.5" CenterY="0.5" 
                                                        ScaleX="1.5" ScaleY="1.5"/>
                                                <TranslateTransform X="0.02" Y="0.3"/>
                                            </TransformGroup>
                                        </RadialGradientBrush.RelativeTransform>
                                        <GradientStop Offset="1" Color="#00000000"/>
                                        <GradientStop Offset="0.3" Color="#FFFFFFFF"/>
                                    </RadialGradientBrush>
                                </Border.Background>
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" TextElement.FontWeight="Bold"/>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" TargetName="border">
                                    <Setter.Value>
                                        <RadialGradientBrush GradientOrigin="0.496,1.052">
                                            <RadialGradientBrush.RelativeTransform>
                                                <TransformGroup>
                                                    <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="1.5" ScaleY="1.5"/>
                                                    <TranslateTransform X="0.02" Y="0.3"/>
                                                </TransformGroup>
                                            </RadialGradientBrush.RelativeTransform>
                                            <GradientStop Color="#00000000" Offset="1"/>
                                            <GradientStop Color="#FF303030" Offset="0.3"/>
                                        </RadialGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" TargetName="border" Value="#FF33962B"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" TargetName="grid" Value="0.25"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--Custom Button02_A: full rounded corners, highlighted blue, click effects-->
        <Style x:Key="ButtonStyle02_A" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="{StaticResource PrimaryHighlightBrush}"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Height" Value="32"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="RenderTransform">
                <Setter.Value>
                    <ScaleTransform ScaleX="1" ScaleY="1" />
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="RenderTransform">
                        <Setter.Value>
                            <ScaleTransform ScaleX=".96" ScaleY=".96" />
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
            <Style.Resources>
                <Style TargetType="Border">
                    <Setter Property="CornerRadius" Value="16"/>
                </Style>
            </Style.Resources>
        </Style>

        <!--Custom Button02_B: full rounded corners, click effects-->
        <Style x:Key="ButtonStyle02_B" TargetType="{x:Type Button}">
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Background" Value="{StaticResource PrimaryMediumBrush}"/>
            <Setter Property="Height" Value="32"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="RenderTransform">
                <Setter.Value>
                    <ScaleTransform ScaleX="1" ScaleY="1" />
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="RenderTransform">
                        <Setter.Value>
                            <ScaleTransform ScaleX=".96" ScaleY=".96" />
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
            <Style.Resources>
                <Style TargetType="Border">
                    <Setter Property="CornerRadius" Value="16"/>
                </Style>
            </Style.Resources>            
        </Style>
        
        <!--Custom Button03_A: with icon, highlighted, rounded corners, click effects -->
        <Style x:Key="ButtonStyle03_A" TargetType="{x:Type Button}">
            <!--Set default properties of the button-->
            <Setter Property="Content" Value="Placeholder"/>
            <Setter Property="Background" Value="{StaticResource PrimaryHighlightBrush}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="MinHeight" Value="32"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <!--Set appearance of the element-->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}"> <!--Element appearance with behaviour of a 'Button'-->
                        <Border x:Name="btn_border" CornerRadius="8" Background="{TemplateBinding Background}">
                            <StackPanel Orientation="Horizontal">
                                <Image Source="{Binding}" Stretch="Fill" Width="36" Height="36" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="4"/>
                                <TextBlock Text="{TemplateBinding Content}" VerticalAlignment="Center" Margin="4,4,16,4" Foreground="White" FontWeight="Bold" FontSize="14"/>
                            </StackPanel>
                        </Border>                        
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="RenderTransform">
                <Setter.Value>
                    <ScaleTransform ScaleX="1" ScaleY="1" />
                </Setter.Value>
            </Setter>
            <!--Set Triggers and Effects-->
            <Style.Triggers>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="RenderTransform">
                        <Setter.Value>
                            <ScaleTransform ScaleX=".96" ScaleY=".96" />
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource PrimaryHoverBrush}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!--Custom Button03_B: with icon, rounded corners, click effects -->
        <Style x:Key="ButtonStyle03_B" TargetType="{x:Type Button}">
            <!--Set default properties of the button-->
            <Setter Property="Content" Value="Placeholder"/>
            <Setter Property="Background" Value="{StaticResource PrimaryMediumBrush}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="MinHeight" Value="32"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <!--Set appearance of the element-->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <!--Element appearance with behaviour of a 'Button'-->
                        <Border x:Name="btn_border" CornerRadius="8" Background="{TemplateBinding Background}">
                            <StackPanel Orientation="Horizontal">
                                <Image Source="{Binding}" Stretch="Fill" Width="36" Height="36" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="4"/>
                                <TextBlock Text="{TemplateBinding Content}" VerticalAlignment="Center" Margin="4,4,16,4" FontWeight="Bold" FontSize="14"/>
                            </StackPanel>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="RenderTransform">
                <Setter.Value>
                    <ScaleTransform ScaleX="1" ScaleY="1" />
                </Setter.Value>
            </Setter>
            <!--Set Triggers and Effects-->
            <Style.Triggers>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="RenderTransform">
                        <Setter.Value>
                            <ScaleTransform ScaleX=".96" ScaleY=".96" />
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource PrimaryHoverBrush}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        
        <!--Custom Button03_C: with icon, rounded corners, click effects, transparent BG -->
        <Style x:Key="ButtonStyle03_C" TargetType="{x:Type Button}">
            <!--Set default properties of the button-->
            <Setter Property="Content" Value="Placeholder"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="MinHeight" Value="32"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <!--Set appearance of the element-->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <!--Element appearance with behaviour of a 'Button'-->
                        <Border x:Name="btn_border" CornerRadius="8" Background="{TemplateBinding Background}">
                            <StackPanel Orientation="Horizontal">
                                <Image Source="{Binding}" Stretch="Fill" Width="36" Height="36" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="4"/>
                                <TextBlock Text="{TemplateBinding Content}" VerticalAlignment="Center" Margin="4,4,16,4" FontWeight="Bold" FontSize="14"/>
                            </StackPanel>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="RenderTransform">
                <Setter.Value>
                    <ScaleTransform ScaleX="1" ScaleY="1" />
                </Setter.Value>
            </Setter>
            <!--Set Triggers and Effects-->
            <Style.Triggers>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="RenderTransform">
                        <Setter.Value>
                            <ScaleTransform ScaleX=".96" ScaleY=".96" />
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource PrimaryHoverBrush}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!--Custom Button04: rectangular, click effects -->
        <Style x:Key="ButtonStyle04" TargetType="{x:Type Button}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
            <Setter Property="RenderTransform">
                <Setter.Value>
                    <ScaleTransform ScaleX="1" ScaleY="1" />
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="RenderTransform">
                        <Setter.Value>
                            <ScaleTransform ScaleX=".96" ScaleY=".96" />
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!--The actual content pages: Used in MainWindow.xaml ContentControl to set the current page-->
        <DataTemplate x:Key="FO0_LandingPage">
            <ui:FO0_LandingPage/>
        </DataTemplate>
        <DataTemplate x:Key="FO1_Setup">
            <ui:FO1_Setup/>
        </DataTemplate>
        <DataTemplate x:Key="FO2_Temperature">
            <ui:FO2_Temperature/>
        </DataTemplate>
        <DataTemplate x:Key="FO3_Moisture">
            <ui:FO3_Moisture/>
        </DataTemplate>

    </Application.Resources>
</Application>
